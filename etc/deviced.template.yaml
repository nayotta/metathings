dev:
  listen: 127.0.0.1:5001
  verbose: true
  log:
    level: debug
  storage:
    driver: sqlite3
    uri: <storage-uri>
  service_endpoint:
    default:
      address: <metathings-address>
  session_storage:
    driver: <storage-driver>
    # ...
  descriptor_storage:
    name: <storage-driver>
    # ...
  connection_center:
    storage:
      name: <storage-driver>
      # ...
    bridge:
      name: <bridge-driver>
      # ...
  flow:
    driver: <flow-driver-name>
    # default driver options:
    ## mongo_uri: <mongo-uri>
    ## mongo_database: <mongo-database>
    ## redis_stream_addr: <redis-addr>
    ## redis_stream_db: <redis-db>
  flow_set:
    driver: <flow-set-driver-name>
    # redis driver options:
    ## redis_stream_addr: <redis-addr>
    ## redis_stream_db: <redis-db>
  simple_storage:
    name: <simple-storage-name>
    # ...
    # PutObjectStreaming options
    ## put object total time, if greater than timeout,
    ## PutObjectStreaming raise timeout exception.
    timeout: <timeout>  # default 20min
    ## if cannt receive pull response after `pull_request_timeout` seconds,
    ## pull request loop will retry to send pull request again,
    ## after `pull_request_retry` times, it will raise timeout exception.
    pull_request_retry: <pull-request-retry>  # default 10 times
    pull_request_timeout: <pull-request-timeout>  # 12 seconds
    ## request body size = chunk_size * chunk_per_request
    ## if request body size greater than 1g, you should adjust k8s ingress.
    ## https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md#custom-max-body-size
    chunk_size: <chunk-size>  # default is 256k
    chunk_per_request: <chunk-per-request>  # default is 4
    # ...

    ## FileSimpleStorage
    # name: file
    # home: /var/metathings/storage/simple_storage

    ## MinioSimpleStorage
    # name: minio
    # minio_endpoint: ...
    # minio_id: ...
    # minio_secret: ...
    # minio_token: ...
    # minio_secure: ...
    # minio_bucket: ...
  credential:
    domain: <credential-domain>
    id: <credential-id>
    secret: <credential-key>
