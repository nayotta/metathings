// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package identity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type User struct {
	Id               string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	DefaultProjectId string            `protobuf:"bytes,3,opt,name=default_project_id,json=defaultProjectId" json:"default_project_id,omitempty"`
	DomainId         string            `protobuf:"bytes,4,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	Enabled          bool              `protobuf:"varint,5,opt,name=enabled" json:"enabled,omitempty"`
	Extra            map[string]string `protobuf:"bytes,6,rep,name=extra" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDefaultProjectId() string {
	if m != nil {
		return m.DefaultProjectId
	}
	return ""
}

func (m *User) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

func (m *User) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *User) GetExtra() map[string]string {
	if m != nil {
		return m.Extra
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "ai.metathings.service.identity.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x50, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0x7f, 0xb5, 0x1d, 0x41, 0xca, 0xe0, 0x61, 0x51, 0x90, 0xe0, 0x29, 0x07, 0x59, 0x41,
	0x2f, 0xc5, 0x7b, 0x0e, 0xbd, 0x49, 0xc0, 0x73, 0xd9, 0x76, 0x47, 0x1d, 0x4d, 0x36, 0x65, 0x33,
	0x29, 0xe6, 0x2d, 0x7c, 0x64, 0xc9, 0xa6, 0xc5, 0x5b, 0x6f, 0xdf, 0x2f, 0xcc, 0x37, 0x00, 0x7d,
	0x47, 0x5e, 0xef, 0x7d, 0x2b, 0x2d, 0xde, 0x19, 0xd6, 0x0d, 0x89, 0x91, 0x4f, 0x76, 0x1f, 0x9d,
	0xee, 0xc8, 0x1f, 0x78, 0x47, 0x9a, 0x2d, 0x39, 0x61, 0x19, 0xee, 0x7f, 0x63, 0x48, 0xdf, 0x3a,
	0xf2, 0x78, 0x05, 0x31, 0x5b, 0x15, 0xe5, 0x51, 0xb1, 0xa8, 0x62, 0xb6, 0x88, 0x90, 0x3a, 0xd3,
	0x90, 0x8a, 0x83, 0x12, 0x30, 0x3e, 0x00, 0x5a, 0x7a, 0x37, 0x7d, 0x2d, 0x9b, 0xbd, 0x6f, 0xbf,
	0x68, 0x27, 0x1b, 0xb6, 0x2a, 0x09, 0x89, 0xe5, 0xd1, 0x79, 0x9d, 0x8c, 0xb5, 0xc5, 0x5b, 0x58,
	0xd8, 0xb6, 0x31, 0xec, 0xc6, 0x50, 0x1a, 0x42, 0xf3, 0x49, 0x58, 0x5b, 0x54, 0x70, 0x41, 0xce,
	0x6c, 0x6b, 0xb2, 0x2a, 0xcb, 0xa3, 0x62, 0x5e, 0x9d, 0x28, 0x96, 0x90, 0xd1, 0x8f, 0x78, 0xa3,
	0x66, 0x79, 0x52, 0x5c, 0x3e, 0x3d, 0xea, 0xf3, 0x0b, 0xf4, 0x78, 0xbd, 0x2e, 0xc7, 0x46, 0xe9,
	0xc4, 0x0f, 0xd5, 0xd4, 0xbe, 0x59, 0x01, 0xfc, 0x8b, 0xb8, 0x84, 0xe4, 0x9b, 0x86, 0xe3, 0xbc,
	0x11, 0xe2, 0x35, 0x64, 0x07, 0x53, 0xf7, 0xa7, 0x81, 0x13, 0x79, 0x89, 0x57, 0xd1, 0x76, 0x16,
	0x3e, 0xf7, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x98, 0x8c, 0xa0, 0x6c, 0x47, 0x01, 0x00, 0x00,
}
