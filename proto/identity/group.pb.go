// Code generated by protoc-gen-go. DO NOT EDIT.
// source: group.proto

package identity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Group struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	DomainId    string `protobuf:"bytes,3,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

func (m *Group) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Group)(nil), "ai.metathings.service.identity.Group")
}

func init() { proto.RegisterFile("group.proto", fileDescriptor20) }

var fileDescriptor20 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xce, 0xbf, 0x0a, 0xc2, 0x40,
	0x0c, 0xc7, 0x71, 0x5a, 0xab, 0xd8, 0x14, 0x1c, 0x32, 0x1d, 0x08, 0x52, 0x9c, 0x9c, 0x6e, 0xf1,
	0x21, 0xc4, 0xd5, 0x17, 0x90, 0xb3, 0x09, 0x35, 0xc2, 0xfd, 0xe1, 0x2e, 0x0a, 0xbe, 0xbd, 0x78,
	0x2e, 0x6e, 0xe1, 0xf3, 0xcd, 0xf0, 0x83, 0x61, 0xce, 0xf1, 0x99, 0x6c, 0xca, 0x51, 0x23, 0xee,
	0x9c, 0x58, 0xcf, 0xea, 0xf4, 0x2e, 0x61, 0x2e, 0xb6, 0x70, 0x7e, 0xc9, 0xc4, 0x56, 0x88, 0x83,
	0x8a, 0xbe, 0xf7, 0x0f, 0x58, 0x9e, 0xbe, 0xef, 0xb8, 0x81, 0x56, 0xc8, 0x34, 0x63, 0x73, 0xe8,
	0x2f, 0xad, 0x10, 0x22, 0x74, 0xc1, 0x79, 0x36, 0x6d, 0x95, 0x7a, 0xe3, 0x16, 0x7a, 0x8a, 0xde,
	0x49, 0xb8, 0x0a, 0x99, 0x45, 0x0d, 0xeb, 0x1f, 0x9c, 0x09, 0x47, 0x18, 0x88, 0xcb, 0x94, 0x25,
	0xa9, 0xc4, 0x60, 0xba, 0x9a, 0xff, 0xe9, 0xb6, 0xaa, 0x93, 0x8e, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xd5, 0x0c, 0x6a, 0x66, 0xa1, 0x00, 0x00, 0x00,
}
