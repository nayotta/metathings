// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_user.proto

package identity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetUserRequest struct {
	UserId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor19, []int{0} }

func (m *GetUserRequest) GetUserId() *google_protobuf.StringValue {
	if m != nil {
		return m.UserId
	}
	return nil
}

type GetUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor19, []int{1} }

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserRequest)(nil), "ai.metathings.service.identity.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "ai.metathings.service.identity.GetUserResponse")
}

func init() { proto.RegisterFile("get_user.proto", fileDescriptor19) }

var fileDescriptor19 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8f, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0xc9, 0xc7, 0x47, 0x84, 0x15, 0x2a, 0xe4, 0x24, 0x45, 0x6a, 0x29, 0x1e, 0xbc, 0x74,
	0x16, 0x14, 0xc4, 0x8b, 0x17, 0x2f, 0x22, 0x1e, 0x84, 0x8a, 0x5e, 0xcb, 0xa6, 0x19, 0xb7, 0x83,
	0x49, 0x26, 0xee, 0xcc, 0x36, 0xf8, 0x6b, 0x05, 0x7f, 0x89, 0x64, 0x5b, 0xeb, 0xcd, 0xdb, 0xc0,
	0x3b, 0xcf, 0x3b, 0xcf, 0x98, 0x91, 0x47, 0x5d, 0x46, 0xc1, 0x00, 0x5d, 0x60, 0xe5, 0x62, 0xe2,
	0x08, 0x1a, 0x54, 0xa7, 0x6b, 0x6a, 0xbd, 0x80, 0x60, 0xd8, 0xd0, 0x0a, 0x81, 0x2a, 0x6c, 0x95,
	0xf4, 0x63, 0x3c, 0xf1, 0xcc, 0xbe, 0x46, 0x9b, 0xb6, 0xcb, 0xf8, 0x6a, 0xfb, 0xe0, 0xba, 0x0e,
	0x83, 0x6c, 0xf9, 0xf1, 0x95, 0x27, 0x5d, 0xc7, 0x12, 0x56, 0xdc, 0xd8, 0xa6, 0x27, 0x7d, 0xe3,
	0xde, 0x7a, 0x9e, 0xa7, 0x70, 0xbe, 0x71, 0x35, 0x55, 0x4e, 0x39, 0x88, 0xdd, 0x8f, 0x3b, 0xce,
	0xfc, 0x3a, 0xcc, 0x1e, 0xcd, 0xe8, 0x0e, 0xf5, 0x59, 0x30, 0x2c, 0xf0, 0x3d, 0xa2, 0x68, 0x71,
	0x63, 0x0e, 0x86, 0x7c, 0x49, 0xd5, 0x71, 0x36, 0xcd, 0xce, 0x0f, 0x2f, 0x4e, 0x60, 0xeb, 0x01,
	0x3f, 0x1e, 0xf0, 0xa4, 0x81, 0x5a, 0xff, 0xe2, 0xea, 0x88, 0xb7, 0xf9, 0xd7, 0xe7, 0xe9, 0xbf,
	0x69, 0xb6, 0xc8, 0x07, 0xe8, 0xbe, 0x9a, 0x3d, 0x98, 0xa3, 0x7d, 0xa1, 0x74, 0xdc, 0x0a, 0x16,
	0xd7, 0xe6, 0xff, 0x10, 0xee, 0xea, 0xce, 0xe0, 0xef, 0xb7, 0x21, 0xb1, 0x89, 0x28, 0xf3, 0x74,
	0xf2, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x58, 0x17, 0x18, 0x8d, 0x3a, 0x01, 0x00, 0x00,
}
