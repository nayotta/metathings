// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application_credential.proto

package identity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ApplicationCredential struct {
	Id           string                       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string                       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string                       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Secret       string                       `protobuf:"bytes,4,opt,name=secret" json:"secret,omitempty"`
	Unrestricted bool                         `protobuf:"varint,5,opt,name=unrestricted" json:"unrestricted,omitempty"`
	ProjectId    string                       `protobuf:"bytes,6,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Role         *ApplicationCredential__Role `protobuf:"bytes,7,opt,name=role" json:"role,omitempty"`
	ExpiresAt    *google_protobuf2.Timestamp  `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *ApplicationCredential) Reset()                    { *m = ApplicationCredential{} }
func (m *ApplicationCredential) String() string            { return proto.CompactTextString(m) }
func (*ApplicationCredential) ProtoMessage()               {}
func (*ApplicationCredential) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *ApplicationCredential) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ApplicationCredential) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplicationCredential) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ApplicationCredential) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *ApplicationCredential) GetUnrestricted() bool {
	if m != nil {
		return m.Unrestricted
	}
	return false
}

func (m *ApplicationCredential) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ApplicationCredential) GetRole() *ApplicationCredential__Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ApplicationCredential) GetExpiresAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

type ApplicationCredential__Role struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	DomainId string `protobuf:"bytes,3,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
}

func (m *ApplicationCredential__Role) Reset()                    { *m = ApplicationCredential__Role{} }
func (m *ApplicationCredential__Role) String() string            { return proto.CompactTextString(m) }
func (*ApplicationCredential__Role) ProtoMessage()               {}
func (*ApplicationCredential__Role) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0, 0} }

func (m *ApplicationCredential__Role) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ApplicationCredential__Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplicationCredential__Role) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

func init() {
	proto.RegisterType((*ApplicationCredential)(nil), "ai.metathings.service.identity.ApplicationCredential")
	proto.RegisterType((*ApplicationCredential__Role)(nil), "ai.metathings.service.identity.ApplicationCredential._Role")
}

func init() { proto.RegisterFile("application_credential.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4b, 0x6b, 0x23, 0x31,
	0x10, 0x84, 0x19, 0xbf, 0xd6, 0xd3, 0x5e, 0xf6, 0x20, 0xd8, 0x45, 0x78, 0xf3, 0x18, 0x7c, 0xf2,
	0x49, 0x86, 0xe4, 0x14, 0x72, 0x32, 0xb9, 0xc4, 0xa7, 0xc0, 0x90, 0xfb, 0x20, 0x4b, 0x1d, 0xa7,
	0xc3, 0xcc, 0x48, 0x48, 0xed, 0x90, 0xfc, 0x89, 0xfc, 0xe6, 0x60, 0x8d, 0x9d, 0x07, 0x84, 0x90,
	0x9b, 0x54, 0x5d, 0x5d, 0x45, 0x7f, 0x70, 0xa4, 0xbd, 0xaf, 0xc9, 0x68, 0x26, 0xd7, 0x56, 0x26,
	0xa0, 0xc5, 0x96, 0x49, 0xd7, 0xca, 0x07, 0xc7, 0x4e, 0x9c, 0x68, 0x52, 0x0d, 0xb2, 0xe6, 0x7b,
	0x6a, 0x37, 0x51, 0x45, 0x0c, 0x8f, 0x64, 0x50, 0x51, 0x72, 0xf1, 0xf3, 0xf4, 0x74, 0xe3, 0xdc,
	0xa6, 0xc6, 0x45, 0x72, 0xaf, 0xb7, 0x77, 0x0b, 0xa6, 0x06, 0x23, 0xeb, 0xc6, 0x77, 0x01, 0xb3,
	0x97, 0x3e, 0xfc, 0x5d, 0xbe, 0x37, 0x5c, 0xbd, 0x15, 0x88, 0x3f, 0xd0, 0x23, 0x2b, 0xb3, 0x22,
	0x9b, 0xe7, 0x65, 0x8f, 0xac, 0x10, 0x30, 0x68, 0x75, 0x83, 0xb2, 0x97, 0x94, 0xf4, 0x16, 0x05,
	0x4c, 0x2c, 0x46, 0x13, 0xc8, 0xef, 0x96, 0x65, 0x3f, 0x8d, 0x3e, 0x4a, 0xe2, 0x1f, 0x8c, 0x22,
	0x9a, 0x80, 0x2c, 0x07, 0x69, 0xb8, 0xff, 0x89, 0x19, 0xfc, 0xde, 0xb6, 0x01, 0x23, 0x07, 0x32,
	0x8c, 0x56, 0x0e, 0x8b, 0x6c, 0x3e, 0x2e, 0x3f, 0x69, 0xe2, 0x18, 0xc0, 0x07, 0xf7, 0x80, 0x86,
	0x2b, 0xb2, 0x72, 0x94, 0xf6, 0xf3, 0xbd, 0xb2, 0xb2, 0xe2, 0x06, 0x06, 0xc1, 0xd5, 0x28, 0x7f,
	0x15, 0xd9, 0x7c, 0x72, 0x76, 0xa9, 0xbe, 0x47, 0xa1, 0xbe, 0xbc, 0x52, 0x55, 0xa5, 0xab, 0xb1,
	0x4c, 0x41, 0xe2, 0x02, 0x00, 0x9f, 0x3c, 0x05, 0x8c, 0x95, 0x66, 0x39, 0x4e, 0xb1, 0x53, 0xd5,
	0x11, 0x54, 0x07, 0x82, 0xea, 0xf6, 0x40, 0xb0, 0xcc, 0xf7, 0xee, 0x25, 0x4f, 0xaf, 0x61, 0x98,
	0x92, 0x7e, 0x44, 0xed, 0x3f, 0xe4, 0xd6, 0x35, 0x9a, 0xda, 0xdd, 0x59, 0x1d, 0xb3, 0x71, 0x27,
	0xac, 0xec, 0x7a, 0x94, 0x8a, 0xce, 0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x75, 0xf8, 0xc2, 0x20,
	0xf8, 0x01, 0x00, 0x00,
}
