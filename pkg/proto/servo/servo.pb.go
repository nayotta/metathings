// Code generated by protoc-gen-go. DO NOT EDIT.
// source: servo.proto

package servo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServoState int32

const (
	ServoState_SERVO_STATE_UNKNOWN ServoState = 0
	ServoState_SERVO_STATE_ON      ServoState = 1
	ServoState_SERVO_STATE_OFF     ServoState = 2
)

var ServoState_name = map[int32]string{
	0: "SERVO_STATE_UNKNOWN",
	1: "SERVO_STATE_ON",
	2: "SERVO_STATE_OFF",
}

var ServoState_value = map[string]int32{
	"SERVO_STATE_UNKNOWN": 0,
	"SERVO_STATE_ON":      1,
	"SERVO_STATE_OFF":     2,
}

func (x ServoState) String() string {
	return proto.EnumName(ServoState_name, int32(x))
}

func (ServoState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7413bec3de114197, []int{0}
}

type Servo struct {
	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State ServoState `protobuf:"varint,2,opt,name=state,proto3,enum=ai.metathings.service.servo.ServoState" json:"state,omitempty"`
	// angle range from min_angle to max_angle, default is [0, 180]
	MinAngle float32 `protobuf:"fixed32,3,opt,name=min_angle,json=minAngle,proto3" json:"min_angle,omitempty"`
	MaxAngle float32 `protobuf:"fixed32,4,opt,name=max_angle,json=maxAngle,proto3" json:"max_angle,omitempty"`
	// current angle, from 0 to 180.
	Angle                float32  `protobuf:"fixed32,5,opt,name=angle,proto3" json:"angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Servo) Reset()         { *m = Servo{} }
func (m *Servo) String() string { return proto.CompactTextString(m) }
func (*Servo) ProtoMessage()    {}
func (*Servo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7413bec3de114197, []int{0}
}

func (m *Servo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Servo.Unmarshal(m, b)
}
func (m *Servo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Servo.Marshal(b, m, deterministic)
}
func (m *Servo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Servo.Merge(m, src)
}
func (m *Servo) XXX_Size() int {
	return xxx_messageInfo_Servo.Size(m)
}
func (m *Servo) XXX_DiscardUnknown() {
	xxx_messageInfo_Servo.DiscardUnknown(m)
}

var xxx_messageInfo_Servo proto.InternalMessageInfo

func (m *Servo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Servo) GetState() ServoState {
	if m != nil {
		return m.State
	}
	return ServoState_SERVO_STATE_UNKNOWN
}

func (m *Servo) GetMinAngle() float32 {
	if m != nil {
		return m.MinAngle
	}
	return 0
}

func (m *Servo) GetMaxAngle() float32 {
	if m != nil {
		return m.MaxAngle
	}
	return 0
}

func (m *Servo) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func init() {
	proto.RegisterEnum("ai.metathings.service.servo.ServoState", ServoState_name, ServoState_value)
	proto.RegisterType((*Servo)(nil), "ai.metathings.service.servo.Servo")
}

func init() { proto.RegisterFile("servo.proto", fileDescriptor_7413bec3de114197) }

var fileDescriptor_7413bec3de114197 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x4e, 0x2d, 0x2a,
	0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x4e, 0xcc, 0xd4, 0xcb, 0x4d, 0x2d, 0x49,
	0x2c, 0xc9, 0xc8, 0xcc, 0x4b, 0x2f, 0xd6, 0x03, 0x49, 0x65, 0x26, 0xa7, 0x82, 0xe9, 0x7c, 0xa5,
	0x55, 0x8c, 0x5c, 0xac, 0xc1, 0x20, 0x96, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0x64, 0xcb, 0xc5, 0x5a, 0x5c, 0x92, 0x58, 0x92,
	0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x67, 0xa4, 0xae, 0x87, 0xc7, 0x28, 0x3d, 0xb0, 0x31, 0xc1,
	0x20, 0xe5, 0x41, 0x10, 0x5d, 0x42, 0xd2, 0x5c, 0x9c, 0xb9, 0x99, 0x79, 0xf1, 0x89, 0x79, 0xe9,
	0x39, 0xa9, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x4c, 0x41, 0x1c, 0xb9, 0x99, 0x79, 0x8e, 0x20, 0x3e,
	0x58, 0x32, 0xb1, 0x02, 0x2a, 0xc9, 0x02, 0x95, 0x4c, 0xac, 0x80, 0x48, 0x8a, 0x70, 0xb1, 0x42,
	0x24, 0x58, 0xc1, 0x12, 0x10, 0x8e, 0x96, 0x1f, 0x17, 0x17, 0xc2, 0x12, 0x21, 0x71, 0x2e, 0xe1,
	0x60, 0xd7, 0xa0, 0x30, 0xff, 0xf8, 0xe0, 0x10, 0xc7, 0x10, 0xd7, 0xf8, 0x50, 0x3f, 0x6f, 0x3f,
	0xff, 0x70, 0x3f, 0x01, 0x06, 0x21, 0x21, 0x2e, 0x3e, 0x64, 0x09, 0x7f, 0x3f, 0x01, 0x46, 0x21,
	0x61, 0x2e, 0x7e, 0x14, 0x31, 0x37, 0x37, 0x01, 0xa6, 0x24, 0x36, 0x70, 0x00, 0x19, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xab, 0xdb, 0xb7, 0x90, 0x2f, 0x01, 0x00, 0x00,
}
