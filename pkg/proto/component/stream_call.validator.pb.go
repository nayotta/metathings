// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stream_call.proto

package component

import fmt "fmt"
import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/golang/protobuf/ptypes/any"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *StreamCallRequest) Validate() error {
	if oneOfNester, ok := this.GetRequest().(*StreamCallRequest_Config); ok {
		if oneOfNester.Config != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Config); err != nil {
				return go_proto_validators.FieldError("Config", err)
			}
		}
	}
	if oneOfNester, ok := this.GetRequest().(*StreamCallRequest_Data); ok {
		if oneOfNester.Data != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Data); err != nil {
				return go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *StreamCallConfigRequest) Validate() error {
	if nil == this.Method {
		return go_proto_validators.FieldError("Method", fmt.Errorf("message must exist"))
	}
	if this.Method != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Method); err != nil {
			return go_proto_validators.FieldError("Method", err)
		}
	}
	return nil
}
func (this *StreamCallDataRequest) Validate() error {
	if nil == this.Value {
		return go_proto_validators.FieldError("Value", fmt.Errorf("message must exist"))
	}
	if this.Value != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Value); err != nil {
			return go_proto_validators.FieldError("Value", err)
		}
	}
	return nil
}
func (this *StreamCallResponse) Validate() error {
	if oneOfNester, ok := this.GetResponse().(*StreamCallResponse_Config); ok {
		if oneOfNester.Config != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Config); err != nil {
				return go_proto_validators.FieldError("Config", err)
			}
		}
	}
	if oneOfNester, ok := this.GetResponse().(*StreamCallResponse_Data); ok {
		if oneOfNester.Data != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Data); err != nil {
				return go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *StreamCallConfigResponse) Validate() error {
	return nil
}
func (this *StreamCallDataResponse) Validate() error {
	if this.Value != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Value); err != nil {
			return go_proto_validators.FieldError("Value", err)
		}
	}
	return nil
}
