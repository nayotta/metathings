// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: start.proto

package camera

import fmt "fmt"
import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *StartConfig) Validate() error {
	if nil == this.Url {
		return go_proto_validators.FieldError("Url", fmt.Errorf("message must exist"))
	}
	if this.Url != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Url); err != nil {
			return go_proto_validators.FieldError("Url", err)
		}
	}
	if this.Device != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Device); err != nil {
			return go_proto_validators.FieldError("Device", err)
		}
	}
	if this.Dimension != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Dimension); err != nil {
			return go_proto_validators.FieldError("Dimension", err)
		}
	}
	if this.Bitrate != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Bitrate); err != nil {
			return go_proto_validators.FieldError("Bitrate", err)
		}
	}
	if this.Framerate != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Framerate); err != nil {
			return go_proto_validators.FieldError("Framerate", err)
		}
	}
	return nil
}
func (this *StartRequest) Validate() error {
	if nil == this.Config {
		return go_proto_validators.FieldError("Config", fmt.Errorf("message must exist"))
	}
	if this.Config != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *StartResponse) Validate() error {
	if this.Camera != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Camera); err != nil {
			return go_proto_validators.FieldError("Camera", err)
		}
	}
	return nil
}
