/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.ai.metathings.service.identityd2.Entity');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.ai.metathings.service.identityd2.Domain');
goog.require('proto.ai.metathings.service.identityd2.Group');
goog.require('proto.ai.metathings.service.identityd2.Role');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.service.identityd2.Entity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.metathings.service.identityd2.Entity.repeatedFields_, null);
};
goog.inherits(proto.ai.metathings.service.identityd2.Entity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.service.identityd2.Entity.displayName = 'proto.ai.metathings.service.identityd2.Entity';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.metathings.service.identityd2.Entity.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.service.identityd2.Entity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.service.identityd2.Entity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.service.identityd2.Entity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domainsList: jspb.Message.toObjectList(msg.getDomainsList(),
    proto.ai.metathings.service.identityd2.Domain.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.ai.metathings.service.identityd2.Group.toObject, includeInstance),
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    proto.ai.metathings.service.identityd2.Role.toObject, includeInstance),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 6, ""),
    password: jspb.Message.getFieldWithDefault(msg, 7, ""),
    extraMap: (f = msg.getExtraMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.service.identityd2.Entity}
 */
proto.ai.metathings.service.identityd2.Entity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.service.identityd2.Entity;
  return proto.ai.metathings.service.identityd2.Entity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.service.identityd2.Entity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.service.identityd2.Entity}
 */
proto.ai.metathings.service.identityd2.Entity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.ai.metathings.service.identityd2.Domain;
      reader.readMessage(value,proto.ai.metathings.service.identityd2.Domain.deserializeBinaryFromReader);
      msg.addDomains(value);
      break;
    case 3:
      var value = new proto.ai.metathings.service.identityd2.Group;
      reader.readMessage(value,proto.ai.metathings.service.identityd2.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 4:
      var value = new proto.ai.metathings.service.identityd2.Role;
      reader.readMessage(value,proto.ai.metathings.service.identityd2.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 8:
      var value = msg.getExtraMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.service.identityd2.Entity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.service.identityd2.Entity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.service.identityd2.Entity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ai.metathings.service.identityd2.Domain.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ai.metathings.service.identityd2.Group.serializeBinaryToWriter
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ai.metathings.service.identityd2.Role.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExtraMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Domain domains = 2;
 * @return {!Array<!proto.ai.metathings.service.identityd2.Domain>}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getDomainsList = function() {
  return /** @type{!Array<!proto.ai.metathings.service.identityd2.Domain>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.metathings.service.identityd2.Domain, 2));
};


/** @param {!Array<!proto.ai.metathings.service.identityd2.Domain>} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setDomainsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ai.metathings.service.identityd2.Domain=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.metathings.service.identityd2.Domain}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.addDomains = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ai.metathings.service.identityd2.Domain, opt_index);
};


proto.ai.metathings.service.identityd2.Entity.prototype.clearDomainsList = function() {
  this.setDomainsList([]);
};


/**
 * repeated Group groups = 3;
 * @return {!Array<!proto.ai.metathings.service.identityd2.Group>}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.ai.metathings.service.identityd2.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.metathings.service.identityd2.Group, 3));
};


/** @param {!Array<!proto.ai.metathings.service.identityd2.Group>} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ai.metathings.service.identityd2.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.metathings.service.identityd2.Group}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ai.metathings.service.identityd2.Group, opt_index);
};


proto.ai.metathings.service.identityd2.Entity.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};


/**
 * repeated Role roles = 4;
 * @return {!Array<!proto.ai.metathings.service.identityd2.Role>}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.ai.metathings.service.identityd2.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.metathings.service.identityd2.Role, 4));
};


/** @param {!Array<!proto.ai.metathings.service.identityd2.Role>} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setRolesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ai.metathings.service.identityd2.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.metathings.service.identityd2.Role}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ai.metathings.service.identityd2.Role, opt_index);
};


proto.ai.metathings.service.identityd2.Entity.prototype.clearRolesList = function() {
  this.setRolesList([]);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string alias = 6;
 * @return {string}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setAlias = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string password = 7;
 * @return {string}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.ai.metathings.service.identityd2.Entity.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> extra = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ai.metathings.service.identityd2.Entity.prototype.getExtraMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


proto.ai.metathings.service.identityd2.Entity.prototype.clearExtraMap = function() {
  this.getExtraMap().clear();
};


