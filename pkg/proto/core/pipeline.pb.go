// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipeline.proto

package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PipelineMessageType int32

const (
	PipelineMessageType_PIPELINE_MESSAGE_TYPE_UNKNOWN PipelineMessageType = 0
	PipelineMessageType_PIPELINE_MESSAGE_TYPE_SYSTEM  PipelineMessageType = 1
	PipelineMessageType_PIPELINE_MESSAGE_TYPE_USER    PipelineMessageType = 2
)

var PipelineMessageType_name = map[int32]string{
	0: "PIPELINE_MESSAGE_TYPE_UNKNOWN",
	1: "PIPELINE_MESSAGE_TYPE_SYSTEM",
	2: "PIPELINE_MESSAGE_TYPE_USER",
}
var PipelineMessageType_value = map[string]int32{
	"PIPELINE_MESSAGE_TYPE_UNKNOWN": 0,
	"PIPELINE_MESSAGE_TYPE_SYSTEM":  1,
	"PIPELINE_MESSAGE_TYPE_USER":    2,
}

func (x PipelineMessageType) String() string {
	return proto.EnumName(PipelineMessageType_name, int32(x))
}
func (PipelineMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type PipelineOutStream struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *PipelineOutStream) Reset()                    { *m = PipelineOutStream{} }
func (m *PipelineOutStream) String() string            { return proto.CompactTextString(m) }
func (*PipelineOutStream) ProtoMessage()               {}
func (*PipelineOutStream) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *PipelineOutStream) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type PipelineInStream struct {
	SessionId   *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	MessageType PipelineMessageType          `protobuf:"varint,2,opt,name=message_type,json=messageType,enum=ai.metathings.service.core.PipelineMessageType" json:"message_type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*PipelineInStream_UnaryCall
	Payload isPipelineInStream_Payload `protobuf_oneof:"payload"`
}

func (m *PipelineInStream) Reset()                    { *m = PipelineInStream{} }
func (m *PipelineInStream) String() string            { return proto.CompactTextString(m) }
func (*PipelineInStream) ProtoMessage()               {}
func (*PipelineInStream) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

type isPipelineInStream_Payload interface {
	isPipelineInStream_Payload()
}

type PipelineInStream_UnaryCall struct {
	UnaryCall *UnaryCallPayload `protobuf:"bytes,3,opt,name=unary_call,json=unaryCall,oneof"`
}

func (*PipelineInStream_UnaryCall) isPipelineInStream_Payload() {}

func (m *PipelineInStream) GetPayload() isPipelineInStream_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PipelineInStream) GetSessionId() *google_protobuf.StringValue {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func (m *PipelineInStream) GetMessageType() PipelineMessageType {
	if m != nil {
		return m.MessageType
	}
	return PipelineMessageType_PIPELINE_MESSAGE_TYPE_UNKNOWN
}

func (m *PipelineInStream) GetUnaryCall() *UnaryCallPayload {
	if x, ok := m.GetPayload().(*PipelineInStream_UnaryCall); ok {
		return x.UnaryCall
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PipelineInStream) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PipelineInStream_OneofMarshaler, _PipelineInStream_OneofUnmarshaler, _PipelineInStream_OneofSizer, []interface{}{
		(*PipelineInStream_UnaryCall)(nil),
	}
}

func _PipelineInStream_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PipelineInStream)
	// payload
	switch x := m.Payload.(type) {
	case *PipelineInStream_UnaryCall:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnaryCall); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PipelineInStream.Payload has unexpected type %T", x)
	}
	return nil
}

func _PipelineInStream_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PipelineInStream)
	switch tag {
	case 3: // payload.unary_call
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnaryCallPayload)
		err := b.DecodeMessage(msg)
		m.Payload = &PipelineInStream_UnaryCall{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PipelineInStream_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PipelineInStream)
	// payload
	switch x := m.Payload.(type) {
	case *PipelineInStream_UnaryCall:
		s := proto.Size(x.UnaryCall)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*PipelineOutStream)(nil), "ai.metathings.service.core.PipelineOutStream")
	proto.RegisterType((*PipelineInStream)(nil), "ai.metathings.service.core.PipelineInStream")
	proto.RegisterEnum("ai.metathings.service.core.PipelineMessageType", PipelineMessageType_name, PipelineMessageType_value)
}

func init() { proto.RegisterFile("pipeline.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xdf, 0xab, 0xd3, 0x30,
	0x1c, 0xc5, 0x6f, 0x2b, 0x5c, 0x69, 0xae, 0x5c, 0x6a, 0x7d, 0x19, 0x65, 0x9b, 0x75, 0x4f, 0x43,
	0x5c, 0x0a, 0x13, 0x7c, 0x77, 0xa3, 0x68, 0xd1, 0x76, 0x65, 0xdd, 0x94, 0xf9, 0x52, 0xb2, 0x36,
	0x76, 0xc1, 0xb4, 0x09, 0x49, 0xba, 0x51, 0xff, 0x07, 0xff, 0x46, 0xc1, 0xbf, 0x44, 0xec, 0x0f,
	0x27, 0xb8, 0xdd, 0xb7, 0x70, 0x72, 0x3e, 0x87, 0x73, 0xbe, 0xe0, 0x9e, 0x13, 0x8e, 0x29, 0x29,
	0x31, 0xe4, 0x82, 0x29, 0x66, 0xd9, 0x88, 0xc0, 0x02, 0x2b, 0xa4, 0x0e, 0xa4, 0xcc, 0x25, 0x94,
	0x58, 0x1c, 0x49, 0x8a, 0x61, 0xca, 0x04, 0xb6, 0xc7, 0x39, 0x63, 0x39, 0xc5, 0x6e, 0xe3, 0xdc,
	0x57, 0x5f, 0xdd, 0x93, 0x40, 0x9c, 0x63, 0x21, 0x5b, 0xd6, 0x7e, 0x93, 0x13, 0x75, 0xa8, 0xf6,
	0x30, 0x65, 0x85, 0x5b, 0x9c, 0x88, 0xfa, 0xc6, 0x4e, 0x6e, 0xce, 0x66, 0xcd, 0xe7, 0xec, 0x88,
	0x28, 0xc9, 0x90, 0x62, 0x42, 0xba, 0x7f, 0x9f, 0x1d, 0x67, 0x56, 0x25, 0x12, 0x75, 0x92, 0x22,
	0x4a, 0x5b, 0x65, 0x32, 0x07, 0x4f, 0xa3, 0xae, 0xd7, 0xaa, 0x52, 0xb1, 0x12, 0x18, 0x15, 0xd6,
	0x08, 0x00, 0x89, 0xa5, 0x24, 0xac, 0x4c, 0x48, 0x36, 0xd0, 0x1c, 0x6d, 0x6a, 0xac, 0x8d, 0x4e,
	0xf1, 0xb3, 0xc9, 0x0f, 0x1d, 0x98, 0x3d, 0xe4, 0x97, 0x1d, 0xb3, 0xfc, 0x8f, 0xb9, 0x9b, 0x0f,
	0x61, 0xbb, 0x03, 0xf6, 0x3b, 0x60, 0xac, 0x04, 0x29, 0xf3, 0x4f, 0x88, 0x56, 0x78, 0x71, 0xfb,
	0xeb, 0xe7, 0x73, 0xdd, 0xd1, 0xfe, 0x49, 0xb6, 0xbe, 0x80, 0x27, 0x05, 0x96, 0x12, 0xe5, 0x38,
	0x51, 0x35, 0xc7, 0x03, 0xdd, 0xd1, 0xa6, 0xf7, 0x73, 0x17, 0x5e, 0x3f, 0x15, 0xec, 0x8b, 0x04,
	0x2d, 0xb7, 0xa9, 0xf9, 0x39, 0xf9, 0xae, 0x38, 0x8b, 0x56, 0x00, 0xc0, 0x79, 0xfd, 0xe0, 0x51,
	0x53, 0xf0, 0xd5, 0x43, 0xc9, 0xdb, 0x3f, 0xee, 0x25, 0xa2, 0x34, 0x42, 0x35, 0x65, 0x28, 0x7b,
	0x7f, 0xb3, 0x36, 0xaa, 0x5e, 0x5b, 0x18, 0xe0, 0x31, 0x6f, 0xf5, 0x97, 0xdf, 0xc1, 0xb3, 0x0b,
	0x2d, 0xac, 0x17, 0x60, 0x14, 0xf9, 0x91, 0xf7, 0xd1, 0x0f, 0xbd, 0x24, 0xf0, 0xe2, 0xf8, 0xed,
	0x3b, 0x2f, 0xd9, 0xec, 0x22, 0x2f, 0xd9, 0x86, 0x1f, 0xc2, 0xd5, 0xe7, 0xd0, 0xbc, 0xb1, 0x1c,
	0x30, 0xbc, 0x6c, 0x89, 0x77, 0xf1, 0xc6, 0x0b, 0x4c, 0xcd, 0x1a, 0x03, 0xfb, 0x4a, 0x48, 0xec,
	0xad, 0x4d, 0x7d, 0x7f, 0xdb, 0x9c, 0xf6, 0xf5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xe0,
	0x90, 0x6b, 0x5e, 0x02, 0x00, 0x00,
}
