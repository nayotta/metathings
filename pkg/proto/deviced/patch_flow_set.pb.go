// Code generated by protoc-gen-go. DO NOT EDIT.
// source: patch_flow_set.proto

package deviced

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PatchFlowSetRequest struct {
	FlowSet              *OpFlowSet `protobuf:"bytes,1,opt,name=flow_set,json=flowSet,proto3" json:"flow_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PatchFlowSetRequest) Reset()         { *m = PatchFlowSetRequest{} }
func (m *PatchFlowSetRequest) String() string { return proto.CompactTextString(m) }
func (*PatchFlowSetRequest) ProtoMessage()    {}
func (*PatchFlowSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a99851caba0b7e3, []int{0}
}

func (m *PatchFlowSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchFlowSetRequest.Unmarshal(m, b)
}
func (m *PatchFlowSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchFlowSetRequest.Marshal(b, m, deterministic)
}
func (m *PatchFlowSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchFlowSetRequest.Merge(m, src)
}
func (m *PatchFlowSetRequest) XXX_Size() int {
	return xxx_messageInfo_PatchFlowSetRequest.Size(m)
}
func (m *PatchFlowSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchFlowSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PatchFlowSetRequest proto.InternalMessageInfo

func (m *PatchFlowSetRequest) GetFlowSet() *OpFlowSet {
	if m != nil {
		return m.FlowSet
	}
	return nil
}

type PatchFlowSetResponse struct {
	FlowSet              *FlowSet `protobuf:"bytes,1,opt,name=flow_set,json=flowSet,proto3" json:"flow_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchFlowSetResponse) Reset()         { *m = PatchFlowSetResponse{} }
func (m *PatchFlowSetResponse) String() string { return proto.CompactTextString(m) }
func (*PatchFlowSetResponse) ProtoMessage()    {}
func (*PatchFlowSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a99851caba0b7e3, []int{1}
}

func (m *PatchFlowSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchFlowSetResponse.Unmarshal(m, b)
}
func (m *PatchFlowSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchFlowSetResponse.Marshal(b, m, deterministic)
}
func (m *PatchFlowSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchFlowSetResponse.Merge(m, src)
}
func (m *PatchFlowSetResponse) XXX_Size() int {
	return xxx_messageInfo_PatchFlowSetResponse.Size(m)
}
func (m *PatchFlowSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchFlowSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PatchFlowSetResponse proto.InternalMessageInfo

func (m *PatchFlowSetResponse) GetFlowSet() *FlowSet {
	if m != nil {
		return m.FlowSet
	}
	return nil
}

func init() {
	proto.RegisterType((*PatchFlowSetRequest)(nil), "ai.metathings.service.deviced.PatchFlowSetRequest")
	proto.RegisterType((*PatchFlowSetResponse)(nil), "ai.metathings.service.deviced.PatchFlowSetResponse")
}

func init() { proto.RegisterFile("patch_flow_set.proto", fileDescriptor_8a99851caba0b7e3) }

var fileDescriptor_8a99851caba0b7e3 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x48, 0x2c, 0x49,
	0xce, 0x88, 0x4f, 0xcb, 0xc9, 0x2f, 0x8f, 0x2f, 0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x92, 0x4d, 0xcc, 0xd4, 0xcb, 0x4d, 0x2d, 0x49, 0x2c, 0xc9, 0xc8, 0xcc, 0x4b, 0x2f, 0xd6,
	0x2b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4b, 0x49, 0x05, 0x51, 0x29, 0x52, 0x66, 0xe9,
	0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xb9, 0xe5, 0x99, 0x25, 0xd9, 0xf9,
	0xe5, 0xfa, 0xe9, 0xf9, 0xba, 0x60, 0xbd, 0xba, 0x65, 0x89, 0x39, 0x99, 0x29, 0x89, 0x25, 0xf9,
	0x45, 0xc5, 0xfa, 0x70, 0x26, 0xc4, 0x58, 0x29, 0xee, 0xdc, 0xfc, 0x94, 0xd4, 0x1c, 0x08, 0x47,
	0x29, 0x89, 0x4b, 0x38, 0x00, 0x64, 0xb7, 0x5b, 0x4e, 0x7e, 0x79, 0x70, 0x6a, 0x49, 0x50, 0x6a,
	0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x37, 0x17, 0x07, 0xcc, 0x31, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0xdc, 0x46, 0x1a, 0x7a, 0x78, 0x5d, 0xa3, 0xe7, 0x5f, 0x00, 0x35, 0xc2, 0x89, 0xed, 0xd1, 0x7d,
	0x79, 0x26, 0x05, 0xc6, 0x20, 0xf6, 0x34, 0x88, 0x80, 0x52, 0x24, 0x97, 0x08, 0xaa, 0x1d, 0xc5,
	0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x8e, 0x18, 0x96, 0xa8, 0x11, 0xb0, 0x04, 0x66, 0x02, 0xcc,
	0xe8, 0x24, 0x36, 0xb0, 0x2f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x4c, 0x09, 0xb3,
	0x41, 0x01, 0x00, 0x00,
}
