// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_firmware_hub.proto

package deviced

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetFirmwareHubRequest struct {
	FirmwareHub          *OpFirmwareHub `protobuf:"bytes,1,opt,name=firmware_hub,json=firmwareHub,proto3" json:"firmware_hub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetFirmwareHubRequest) Reset()         { *m = GetFirmwareHubRequest{} }
func (m *GetFirmwareHubRequest) String() string { return proto.CompactTextString(m) }
func (*GetFirmwareHubRequest) ProtoMessage()    {}
func (*GetFirmwareHubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88d18ff8229aa50, []int{0}
}

func (m *GetFirmwareHubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFirmwareHubRequest.Unmarshal(m, b)
}
func (m *GetFirmwareHubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFirmwareHubRequest.Marshal(b, m, deterministic)
}
func (m *GetFirmwareHubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFirmwareHubRequest.Merge(m, src)
}
func (m *GetFirmwareHubRequest) XXX_Size() int {
	return xxx_messageInfo_GetFirmwareHubRequest.Size(m)
}
func (m *GetFirmwareHubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFirmwareHubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFirmwareHubRequest proto.InternalMessageInfo

func (m *GetFirmwareHubRequest) GetFirmwareHub() *OpFirmwareHub {
	if m != nil {
		return m.FirmwareHub
	}
	return nil
}

type GetFirmwareHubResponse struct {
	FirmwareHub          *FirmwareHub `protobuf:"bytes,1,opt,name=firmware_hub,json=firmwareHub,proto3" json:"firmware_hub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetFirmwareHubResponse) Reset()         { *m = GetFirmwareHubResponse{} }
func (m *GetFirmwareHubResponse) String() string { return proto.CompactTextString(m) }
func (*GetFirmwareHubResponse) ProtoMessage()    {}
func (*GetFirmwareHubResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88d18ff8229aa50, []int{1}
}

func (m *GetFirmwareHubResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFirmwareHubResponse.Unmarshal(m, b)
}
func (m *GetFirmwareHubResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFirmwareHubResponse.Marshal(b, m, deterministic)
}
func (m *GetFirmwareHubResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFirmwareHubResponse.Merge(m, src)
}
func (m *GetFirmwareHubResponse) XXX_Size() int {
	return xxx_messageInfo_GetFirmwareHubResponse.Size(m)
}
func (m *GetFirmwareHubResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFirmwareHubResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFirmwareHubResponse proto.InternalMessageInfo

func (m *GetFirmwareHubResponse) GetFirmwareHub() *FirmwareHub {
	if m != nil {
		return m.FirmwareHub
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFirmwareHubRequest)(nil), "ai.metathings.service.deviced.GetFirmwareHubRequest")
	proto.RegisterType((*GetFirmwareHubResponse)(nil), "ai.metathings.service.deviced.GetFirmwareHubResponse")
}

func init() { proto.RegisterFile("get_firmware_hub.proto", fileDescriptor_d88d18ff8229aa50) }

var fileDescriptor_d88d18ff8229aa50 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0x4f, 0x2d, 0x89,
	0x4f, 0xcb, 0x2c, 0xca, 0x2d, 0x4f, 0x2c, 0x4a, 0x8d, 0xcf, 0x28, 0x4d, 0xd2, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x92, 0x4d, 0xcc, 0xd4, 0xcb, 0x4d, 0x2d, 0x49, 0x2c, 0xc9, 0xc8, 0xcc, 0x4b,
	0x2f, 0xd6, 0x2b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4b, 0x49, 0x05, 0x51, 0x29, 0x52,
	0x66, 0xe9, 0x99, 0x25, 0x20, 0xc5, 0xc9, 0xf9, 0xb9, 0xfa, 0xb9, 0xe5, 0x99, 0x25, 0xd9, 0xf9,
	0xe5, 0xfa, 0xe9, 0xf9, 0xba, 0x60, 0xbd, 0xba, 0x65, 0x89, 0x39, 0x99, 0x29, 0x89, 0x25, 0xf9,
	0x45, 0xc5, 0xfa, 0x70, 0x26, 0xc4, 0x58, 0x29, 0xee, 0xdc, 0xfc, 0x94, 0xd4, 0x1c, 0x08, 0x47,
	0xa9, 0x80, 0x4b, 0xd4, 0x3d, 0xb5, 0xc4, 0x0d, 0x6a, 0xb9, 0x47, 0x69, 0x52, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x50, 0x38, 0x17, 0x0f, 0xb2, 0x93, 0x24, 0x18, 0x15, 0x18, 0x35, 0xb8,
	0x8d, 0x74, 0xf4, 0xf0, 0xba, 0x49, 0xcf, 0xbf, 0x00, 0xc9, 0x28, 0x27, 0xb6, 0x47, 0xf7, 0xe5,
	0x99, 0x14, 0x18, 0x83, 0xb8, 0xd3, 0x10, 0x82, 0x4a, 0xe9, 0x5c, 0x62, 0xe8, 0x36, 0x16, 0x17,
	0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xf9, 0x62, 0xb5, 0x52, 0x8b, 0x80, 0x95, 0xc8, 0x26, 0x21, 0x5b,
	0x94, 0xc4, 0x06, 0xf6, 0xa1, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x3b, 0x1b, 0xbb, 0x5f,
	0x01, 0x00, 0x00,
}
