/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.ai.metathings.service.deviced.Device');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ai.metathings.service.deviced.Flow');
goog.require('proto.ai.metathings.service.deviced.Module');
goog.require('proto.google.protobuf.Timestamp');

goog.forwardDeclare('proto.ai.metathings.constant.kind.DeviceKind');
goog.forwardDeclare('proto.ai.metathings.constant.state.DeviceState');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.metathings.service.deviced.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.metathings.service.deviced.Device.repeatedFields_, null);
};
goog.inherits(proto.ai.metathings.service.deviced.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ai.metathings.service.deviced.Device.displayName = 'proto.ai.metathings.service.deviced.Device';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.metathings.service.deviced.Device.repeatedFields_ = [6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.metathings.service.deviced.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.metathings.service.deviced.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.metathings.service.deviced.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.service.deviced.Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 5, ""),
    modulesList: jspb.Message.toObjectList(msg.getModulesList(),
    proto.ai.metathings.service.deviced.Module.toObject, includeInstance),
    heartbeatAt: (f = msg.getHeartbeatAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    flowsList: jspb.Message.toObjectList(msg.getFlowsList(),
    proto.ai.metathings.service.deviced.Flow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.metathings.service.deviced.Device}
 */
proto.ai.metathings.service.deviced.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.metathings.service.deviced.Device;
  return proto.ai.metathings.service.deviced.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.metathings.service.deviced.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.metathings.service.deviced.Device}
 */
proto.ai.metathings.service.deviced.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.ai.metathings.constant.kind.DeviceKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {!proto.ai.metathings.constant.state.DeviceState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 6:
      var value = new proto.ai.metathings.service.deviced.Module;
      reader.readMessage(value,proto.ai.metathings.service.deviced.Module.deserializeBinaryFromReader);
      msg.addModules(value);
      break;
    case 7:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setHeartbeatAt(value);
      break;
    case 8:
      var value = new proto.ai.metathings.service.deviced.Flow;
      reader.readMessage(value,proto.ai.metathings.service.deviced.Flow.deserializeBinaryFromReader);
      msg.addFlows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.metathings.service.deviced.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.metathings.service.deviced.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.metathings.service.deviced.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.metathings.service.deviced.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ai.metathings.service.deviced.Module.serializeBinaryToWriter
    );
  }
  f = message.getHeartbeatAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFlowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ai.metathings.service.deviced.Flow.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ai.metathings.service.deviced.Device.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ai.metathings.service.deviced.Device.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ai.metathings.constant.kind.DeviceKind kind = 2;
 * @return {!proto.ai.metathings.constant.kind.DeviceKind}
 */
proto.ai.metathings.service.deviced.Device.prototype.getKind = function() {
  return /** @type {!proto.ai.metathings.constant.kind.DeviceKind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.ai.metathings.constant.kind.DeviceKind} value */
proto.ai.metathings.service.deviced.Device.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ai.metathings.constant.state.DeviceState state = 3;
 * @return {!proto.ai.metathings.constant.state.DeviceState}
 */
proto.ai.metathings.service.deviced.Device.prototype.getState = function() {
  return /** @type {!proto.ai.metathings.constant.state.DeviceState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.ai.metathings.constant.state.DeviceState} value */
proto.ai.metathings.service.deviced.Device.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.ai.metathings.service.deviced.Device.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ai.metathings.service.deviced.Device.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string alias = 5;
 * @return {string}
 */
proto.ai.metathings.service.deviced.Device.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ai.metathings.service.deviced.Device.prototype.setAlias = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Module modules = 6;
 * @return {!Array<!proto.ai.metathings.service.deviced.Module>}
 */
proto.ai.metathings.service.deviced.Device.prototype.getModulesList = function() {
  return /** @type{!Array<!proto.ai.metathings.service.deviced.Module>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.metathings.service.deviced.Module, 6));
};


/** @param {!Array<!proto.ai.metathings.service.deviced.Module>} value */
proto.ai.metathings.service.deviced.Device.prototype.setModulesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ai.metathings.service.deviced.Module=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.metathings.service.deviced.Module}
 */
proto.ai.metathings.service.deviced.Device.prototype.addModules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ai.metathings.service.deviced.Module, opt_index);
};


proto.ai.metathings.service.deviced.Device.prototype.clearModulesList = function() {
  this.setModulesList([]);
};


/**
 * optional google.protobuf.Timestamp heartbeat_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ai.metathings.service.deviced.Device.prototype.getHeartbeatAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.ai.metathings.service.deviced.Device.prototype.setHeartbeatAt = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.ai.metathings.service.deviced.Device.prototype.clearHeartbeatAt = function() {
  this.setHeartbeatAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ai.metathings.service.deviced.Device.prototype.hasHeartbeatAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Flow flows = 8;
 * @return {!Array<!proto.ai.metathings.service.deviced.Flow>}
 */
proto.ai.metathings.service.deviced.Device.prototype.getFlowsList = function() {
  return /** @type{!Array<!proto.ai.metathings.service.deviced.Flow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.metathings.service.deviced.Flow, 8));
};


/** @param {!Array<!proto.ai.metathings.service.deviced.Flow>} value */
proto.ai.metathings.service.deviced.Device.prototype.setFlowsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ai.metathings.service.deviced.Flow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.metathings.service.deviced.Flow}
 */
proto.ai.metathings.service.deviced.Device.prototype.addFlows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ai.metathings.service.deviced.Flow, opt_index);
};


proto.ai.metathings.service.deviced.Device.prototype.clearFlowsList = function() {
  this.setFlowsList([]);
};


