// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: connect.proto

/*
Package deviced is a generated protocol buffer package.

It is generated from these files:
	connect.proto
	create_device.proto
	delete_device.proto
	get_device.proto
	list_devices.proto
	model.proto
	patch_device.proto
	service.proto
	show_device.proto
	stream_call.proto
	unary_call.proto

It has these top-level messages:
	ConnectResponse
	ConnectRequest
	CreateDeviceRequest
	CreateDeviceResponse
	DeleteDeviceRequest
	GetDeviceRequest
	GetDeviceResponse
	ListDevicesRequest
	ListDevicesResponse
	Device
	OpDevice
	Module
	OpModule
	ErrorValue
	OpUnaryCallValue
	UnaryCallValue
	OpStreamCallValue
	StreamCallValue
	OpStreamCallConfig
	StreamCallConfig
	OpStreamCallData
	StreamCallData
	PatchDeviceRequest
	PatchDeviceResponse
	ShowDeviceResponse
	StreamCallRequest
	StreamCallResponse
	UnaryCallRequest
	UnaryCallResponse
*/
package deviced

import fmt "fmt"
import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ConnectResponse) Validate() error {
	if oneOfNester, ok := this.GetUnion().(*ConnectResponse_UnaryCall); ok {
		if oneOfNester.UnaryCall != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.UnaryCall); err != nil {
				return go_proto_validators.FieldError("UnaryCall", err)
			}
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectResponse_StreamCall); ok {
		if oneOfNester.StreamCall != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.StreamCall); err != nil {
				return go_proto_validators.FieldError("StreamCall", err)
			}
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectResponse_Err); ok {
		if oneOfNester.Err != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Err); err != nil {
				return go_proto_validators.FieldError("Err", err)
			}
		}
	}
	return nil
}
func (this *ConnectRequest) Validate() error {
	if nil == this.SessionId {
		return go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return go_proto_validators.FieldError("SessionId", err)
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectRequest_UnaryCall); ok {
		if oneOfNester.UnaryCall != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.UnaryCall); err != nil {
				return go_proto_validators.FieldError("UnaryCall", err)
			}
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectRequest_StreamCall); ok {
		if oneOfNester.StreamCall != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.StreamCall); err != nil {
				return go_proto_validators.FieldError("StreamCall", err)
			}
		}
	}
	return nil
}
