// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: connect.proto

package deviced

import fmt "fmt"
import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ConnectResponse) Validate() error {
	if oneOfNester, ok := this.GetUnion().(*ConnectResponse_UnaryCall); ok {
		if oneOfNester.UnaryCall != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.UnaryCall); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("UnaryCall", err)
			}
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectResponse_StreamCall); ok {
		if oneOfNester.StreamCall != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.StreamCall); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("StreamCall", err)
			}
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectResponse_Err); ok {
		if oneOfNester.Err != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Err); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Err", err)
			}
		}
	}
	return nil
}
func (this *ConnectRequest) Validate() error {
	if nil == this.SessionId {
		return github_com_mwitkow_go_proto_validators.FieldError("SessionId", fmt.Errorf("message must exist"))
	}
	if this.SessionId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SessionId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SessionId", err)
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectRequest_UnaryCall); ok {
		if oneOfNester.UnaryCall != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.UnaryCall); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("UnaryCall", err)
			}
		}
	}
	if oneOfNester, ok := this.GetUnion().(*ConnectRequest_StreamCall); ok {
		if oneOfNester.StreamCall != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.StreamCall); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("StreamCall", err)
			}
		}
	}
	return nil
}
