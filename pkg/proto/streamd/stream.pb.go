// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

package streamd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StreamState int32

const (
	StreamState_STREAM_STATE_UNKNOWN     StreamState = 0
	StreamState_STREAM_STATE_RUNNING     StreamState = 1
	StreamState_STREAM_STATE_STARTING    StreamState = 2
	StreamState_STREAM_STATE_TERMINATING StreamState = 3
	StreamState_STREAM_STATE_STOP        StreamState = 4
)

var StreamState_name = map[int32]string{
	0: "STREAM_STATE_UNKNOWN",
	1: "STREAM_STATE_RUNNING",
	2: "STREAM_STATE_STARTING",
	3: "STREAM_STATE_TERMINATING",
	4: "STREAM_STATE_STOP",
}
var StreamState_value = map[string]int32{
	"STREAM_STATE_UNKNOWN":     0,
	"STREAM_STATE_RUNNING":     1,
	"STREAM_STATE_STARTING":    2,
	"STREAM_STATE_TERMINATING": 3,
	"STREAM_STATE_STOP":        4,
}

func (x StreamState) String() string {
	return proto.EnumName(StreamState_name, int32(x))
}
func (StreamState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{0}
}

type PodType int32

const (
	PodType_POD_TYPE_UNKNOWN PodType = 0
	PodType_POD_TYPE_SOURCE  PodType = 1
	PodType_POD_TYPE_FILTER  PodType = 2
	PodType_POD_TYPE_SINK    PodType = 3
)

var PodType_name = map[int32]string{
	0: "POD_TYPE_UNKNOWN",
	1: "POD_TYPE_SOURCE",
	2: "POD_TYPE_FILTER",
	3: "POD_TYPE_SINK",
}
var PodType_value = map[string]int32{
	"POD_TYPE_UNKNOWN": 0,
	"POD_TYPE_SOURCE":  1,
	"POD_TYPE_FILTER":  2,
	"POD_TYPE_SINK":    3,
}

func (x PodType) String() string {
	return proto.EnumName(PodType_name, int32(x))
}
func (PodType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{1}
}

type Stream struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OwnerId              string      `protobuf:"bytes,3,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	State                StreamState `protobuf:"varint,4,opt,name=state,enum=ai.metathings.service.streamd.StreamState" json:"state,omitempty"`
	Pods                 []*Pod      `protobuf:"bytes,5,rep,name=pods" json:"pods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{0}
}
func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (dst *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(dst, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Stream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Stream) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Stream) GetState() StreamState {
	if m != nil {
		return m.State
	}
	return StreamState_STREAM_STATE_UNKNOWN
}

func (m *Stream) GetPods() []*Pod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type Pod struct {
	Type PodType `protobuf:"varint,1,opt,name=type,enum=ai.metathings.service.streamd.PodType" json:"type,omitempty"`
	// Types that are valid to be assigned to Component:
	//	*Pod_Source
	//	*Pod_Filter
	//	*Pod_Sink
	Component            isPod_Component `protobuf_oneof:"component"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Pod) Reset()         { *m = Pod{} }
func (m *Pod) String() string { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()    {}
func (*Pod) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{1}
}
func (m *Pod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pod.Unmarshal(m, b)
}
func (m *Pod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pod.Marshal(b, m, deterministic)
}
func (dst *Pod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pod.Merge(dst, src)
}
func (m *Pod) XXX_Size() int {
	return xxx_messageInfo_Pod.Size(m)
}
func (m *Pod) XXX_DiscardUnknown() {
	xxx_messageInfo_Pod.DiscardUnknown(m)
}

var xxx_messageInfo_Pod proto.InternalMessageInfo

type isPod_Component interface {
	isPod_Component()
}

type Pod_Source struct {
	Source *Source `protobuf:"bytes,2,opt,name=source,oneof"`
}
type Pod_Filter struct {
	Filter *Filter `protobuf:"bytes,3,opt,name=filter,oneof"`
}
type Pod_Sink struct {
	Sink *Sink `protobuf:"bytes,4,opt,name=sink,oneof"`
}

func (*Pod_Source) isPod_Component() {}
func (*Pod_Filter) isPod_Component() {}
func (*Pod_Sink) isPod_Component()   {}

func (m *Pod) GetComponent() isPod_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Pod) GetType() PodType {
	if m != nil {
		return m.Type
	}
	return PodType_POD_TYPE_UNKNOWN
}

func (m *Pod) GetSource() *Source {
	if x, ok := m.GetComponent().(*Pod_Source); ok {
		return x.Source
	}
	return nil
}

func (m *Pod) GetFilter() *Filter {
	if x, ok := m.GetComponent().(*Pod_Filter); ok {
		return x.Filter
	}
	return nil
}

func (m *Pod) GetSink() *Sink {
	if x, ok := m.GetComponent().(*Pod_Sink); ok {
		return x.Sink
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Pod) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Pod_OneofMarshaler, _Pod_OneofUnmarshaler, _Pod_OneofSizer, []interface{}{
		(*Pod_Source)(nil),
		(*Pod_Filter)(nil),
		(*Pod_Sink)(nil),
	}
}

func _Pod_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Pod)
	// component
	switch x := m.Component.(type) {
	case *Pod_Source:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Source); err != nil {
			return err
		}
	case *Pod_Filter:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Filter); err != nil {
			return err
		}
	case *Pod_Sink:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sink); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Pod.Component has unexpected type %T", x)
	}
	return nil
}

func _Pod_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Pod)
	switch tag {
	case 2: // component.source
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Source)
		err := b.DecodeMessage(msg)
		m.Component = &Pod_Source{msg}
		return true, err
	case 3: // component.filter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Filter)
		err := b.DecodeMessage(msg)
		m.Component = &Pod_Filter{msg}
		return true, err
	case 4: // component.sink
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sink)
		err := b.DecodeMessage(msg)
		m.Component = &Pod_Sink{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Pod_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Pod)
	// component
	switch x := m.Component.(type) {
	case *Pod_Source:
		s := proto.Size(x.Source)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Pod_Filter:
		s := proto.Size(x.Filter)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Pod_Sink:
		s := proto.Size(x.Sink)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Source struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	StreamId             string            `protobuf:"bytes,3,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Downstreams          []string          `protobuf:"bytes,4,rep,name=downstreams" json:"downstreams,omitempty"`
	Config               map[string]string `protobuf:"bytes,5,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{2}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (dst *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(dst, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Source) GetStreamId() string {
	if m != nil {
		return m.StreamId
	}
	return ""
}

func (m *Source) GetDownstreams() []string {
	if m != nil {
		return m.Downstreams
	}
	return nil
}

func (m *Source) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type Filter struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	StreamId             string            `protobuf:"bytes,3,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Downstreams          []string          `protobuf:"bytes,4,rep,name=downstreams" json:"downstreams,omitempty"`
	Config               map[string]string `protobuf:"bytes,5,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{3}
}
func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (dst *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(dst, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Filter) GetStreamId() string {
	if m != nil {
		return m.StreamId
	}
	return ""
}

func (m *Filter) GetDownstreams() []string {
	if m != nil {
		return m.Downstreams
	}
	return nil
}

func (m *Filter) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type Sink struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	StreamId             string            `protobuf:"bytes,3,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Config               map[string]string `protobuf:"bytes,4,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Sink) Reset()         { *m = Sink{} }
func (m *Sink) String() string { return proto.CompactTextString(m) }
func (*Sink) ProtoMessage()    {}
func (*Sink) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_ec4bcafa291058b1, []int{4}
}
func (m *Sink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sink.Unmarshal(m, b)
}
func (m *Sink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sink.Marshal(b, m, deterministic)
}
func (dst *Sink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sink.Merge(dst, src)
}
func (m *Sink) XXX_Size() int {
	return xxx_messageInfo_Sink.Size(m)
}
func (m *Sink) XXX_DiscardUnknown() {
	xxx_messageInfo_Sink.DiscardUnknown(m)
}

var xxx_messageInfo_Sink proto.InternalMessageInfo

func (m *Sink) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sink) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sink) GetStreamId() string {
	if m != nil {
		return m.StreamId
	}
	return ""
}

func (m *Sink) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*Stream)(nil), "ai.metathings.service.streamd.Stream")
	proto.RegisterType((*Pod)(nil), "ai.metathings.service.streamd.Pod")
	proto.RegisterType((*Source)(nil), "ai.metathings.service.streamd.Source")
	proto.RegisterMapType((map[string]string)(nil), "ai.metathings.service.streamd.Source.ConfigEntry")
	proto.RegisterType((*Filter)(nil), "ai.metathings.service.streamd.Filter")
	proto.RegisterMapType((map[string]string)(nil), "ai.metathings.service.streamd.Filter.ConfigEntry")
	proto.RegisterType((*Sink)(nil), "ai.metathings.service.streamd.Sink")
	proto.RegisterMapType((map[string]string)(nil), "ai.metathings.service.streamd.Sink.ConfigEntry")
	proto.RegisterEnum("ai.metathings.service.streamd.StreamState", StreamState_name, StreamState_value)
	proto.RegisterEnum("ai.metathings.service.streamd.PodType", PodType_name, PodType_value)
}

func init() { proto.RegisterFile("stream.proto", fileDescriptor_stream_ec4bcafa291058b1) }

var fileDescriptor_stream_ec4bcafa291058b1 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xad, 0x1f, 0x49, 0x9b, 0x6b, 0x08, 0xee, 0x90, 0x4a, 0x6e, 0x79, 0x28, 0x0a, 0x02, 0x45,
	0x59, 0x38, 0x22, 0x48, 0x88, 0x76, 0x03, 0xa1, 0xb8, 0xad, 0x55, 0xea, 0x44, 0x63, 0x47, 0x08,
	0x09, 0x29, 0x72, 0xe3, 0x49, 0xb0, 0x92, 0x78, 0x2c, 0x7b, 0xd2, 0x28, 0xdf, 0xc0, 0x8a, 0x4f,
	0x62, 0xcd, 0xd7, 0xf0, 0x07, 0xc8, 0x33, 0xa1, 0x4d, 0x40, 0xc2, 0x91, 0xe8, 0x82, 0x9d, 0xe7,
	0xdc, 0x73, 0xae, 0xcf, 0xb9, 0x77, 0x34, 0x70, 0x27, 0x65, 0x09, 0xf1, 0xa7, 0x66, 0x9c, 0x50,
	0x46, 0xd1, 0x23, 0x3f, 0x34, 0xa7, 0x84, 0xf9, 0xec, 0x73, 0x18, 0x8d, 0x52, 0x33, 0x25, 0xc9,
	0x55, 0x38, 0x20, 0xa6, 0xe0, 0x04, 0x07, 0x8f, 0x47, 0x94, 0x8e, 0x26, 0xa4, 0xc9, 0xc9, 0x97,
	0xb3, 0x61, 0x73, 0x9e, 0xf8, 0x71, 0x4c, 0x92, 0x54, 0xc8, 0x6b, 0xdf, 0x24, 0x28, 0xba, 0x9c,
	0x8b, 0xca, 0x20, 0x87, 0x81, 0x21, 0x55, 0xa5, 0x7a, 0x09, 0xcb, 0x61, 0x80, 0x10, 0xa8, 0x91,
	0x3f, 0x25, 0x86, 0xcc, 0x11, 0xfe, 0x8d, 0xf6, 0x61, 0x87, 0xce, 0x23, 0x92, 0xf4, 0xc3, 0xc0,
	0x50, 0x38, 0xbe, 0xcd, 0xcf, 0x76, 0x80, 0xde, 0x40, 0x21, 0x65, 0x3e, 0x23, 0x86, 0x5a, 0x95,
	0xea, 0xe5, 0x56, 0xc3, 0xfc, 0xab, 0x31, 0x53, 0xfc, 0xd4, 0xcd, 0x14, 0x58, 0x08, 0xd1, 0x4b,
	0x50, 0x63, 0x1a, 0xa4, 0x46, 0xa1, 0xaa, 0xd4, 0xb5, 0x56, 0x2d, 0xa7, 0x41, 0x97, 0x06, 0x98,
	0xf3, 0x6b, 0x5f, 0x64, 0x50, 0xba, 0x34, 0x40, 0x47, 0xa0, 0xb2, 0x45, 0x4c, 0x78, 0x84, 0x72,
	0xeb, 0x59, 0xbe, 0xde, 0x5b, 0xc4, 0x04, 0x73, 0x0d, 0x7a, 0x0d, 0xc5, 0x94, 0xce, 0x92, 0x81,
	0x88, 0xab, 0xb5, 0x9e, 0xe6, 0xd9, 0xe7, 0xe4, 0xb3, 0x2d, 0xbc, 0x94, 0x65, 0x0d, 0x86, 0xe1,
	0x84, 0x91, 0x84, 0xcf, 0x25, 0xbf, 0xc1, 0x09, 0x27, 0x67, 0x0d, 0x84, 0x0c, 0x1d, 0x82, 0x9a,
	0x86, 0xd1, 0x98, 0x8f, 0x4f, 0x6b, 0x3d, 0xc9, 0xfb, 0x7f, 0x18, 0x8d, 0xcf, 0xb6, 0x30, 0x97,
	0xbc, 0xd5, 0xa0, 0x34, 0xa0, 0xd3, 0x98, 0x46, 0x24, 0x62, 0xb5, 0x1f, 0xd9, 0x46, 0x85, 0xa7,
	0x4d, 0x36, 0xfa, 0x00, 0x4a, 0xa2, 0xe7, 0xcd, 0x4a, 0x77, 0x04, 0x60, 0x07, 0xa8, 0x0a, 0x5a,
	0x40, 0xe7, 0x91, 0x38, 0xa7, 0x86, 0x5a, 0x55, 0xea, 0x25, 0xbc, 0x0a, 0x21, 0x1b, 0x8a, 0x03,
	0x1a, 0x0d, 0xc3, 0xd1, 0x72, 0x6b, 0xcf, 0x37, 0x9a, 0x9b, 0x79, 0xcc, 0x35, 0x56, 0xc4, 0x92,
	0x05, 0x5e, 0x36, 0x38, 0x38, 0x04, 0x6d, 0x05, 0x46, 0x3a, 0x28, 0x63, 0xb2, 0x58, 0xba, 0xcf,
	0x3e, 0x51, 0x05, 0x0a, 0x57, 0xfe, 0x64, 0xf6, 0xcb, 0xbf, 0x38, 0x1c, 0xc9, 0xaf, 0x24, 0x9e,
	0x59, 0x0c, 0xf4, 0x7f, 0xcc, 0x2c, 0x9c, 0xdd, 0x76, 0xe6, 0xef, 0x12, 0xa8, 0xd9, 0x2d, 0xf8,
	0xf7, 0xc4, 0xa7, 0xd7, 0x79, 0x54, 0x9e, 0xa7, 0xb9, 0xc1, 0xdd, 0xbb, 0xe5, 0x34, 0x8d, 0xaf,
	0x12, 0x68, 0x2b, 0x4f, 0x02, 0x32, 0xa0, 0xe2, 0x7a, 0xd8, 0x6a, 0x5f, 0xf4, 0x5d, 0xaf, 0xed,
	0x59, 0xfd, 0x9e, 0x73, 0xee, 0x74, 0x3e, 0x38, 0xfa, 0xd6, 0x1f, 0x15, 0xdc, 0x73, 0x1c, 0xdb,
	0x39, 0xd5, 0x25, 0xb4, 0x0f, 0x7b, 0x6b, 0x15, 0xd7, 0x6b, 0x63, 0x2f, 0x2b, 0xc9, 0xe8, 0x21,
	0x18, 0x6b, 0x25, 0xcf, 0xc2, 0x17, 0xb6, 0xd3, 0xe6, 0x55, 0x05, 0xed, 0xc1, 0xee, 0x6f, 0xc2,
	0x4e, 0x57, 0x57, 0x1b, 0x9f, 0x60, 0x7b, 0xf9, 0x48, 0xa0, 0x0a, 0xe8, 0xdd, 0xce, 0xbb, 0xbe,
	0xf7, 0xb1, 0xbb, 0x6a, 0xe5, 0x3e, 0xdc, 0xbb, 0x46, 0xdd, 0x4e, 0x0f, 0x1f, 0x5b, 0xba, 0xb4,
	0x06, 0x9e, 0xd8, 0xef, 0x3d, 0x0b, 0xeb, 0x32, 0xda, 0x85, 0xbb, 0x37, 0x4c, 0xdb, 0x39, 0xd7,
	0x95, 0xcb, 0x22, 0x7f, 0x80, 0x5f, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x20, 0x8f, 0xb2,
	0xcf, 0x05, 0x00, 0x00,
}
