// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stream.proto

package streamd

import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Stream) Validate() error {
	for _, item := range this.Pods {
		if item != nil {
			if err := go_proto_validators.CallValidatorIfExists(item); err != nil {
				return go_proto_validators.FieldError("Pods", err)
			}
		}
	}
	return nil
}
func (this *Pod) Validate() error {
	if oneOfNester, ok := this.GetComponent().(*Pod_Source); ok {
		if oneOfNester.Source != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Source); err != nil {
				return go_proto_validators.FieldError("Source", err)
			}
		}
	}
	if oneOfNester, ok := this.GetComponent().(*Pod_Filter); ok {
		if oneOfNester.Filter != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Filter); err != nil {
				return go_proto_validators.FieldError("Filter", err)
			}
		}
	}
	if oneOfNester, ok := this.GetComponent().(*Pod_Sink); ok {
		if oneOfNester.Sink != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Sink); err != nil {
				return go_proto_validators.FieldError("Sink", err)
			}
		}
	}
	return nil
}
func (this *Source) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Filter) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Sink) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
