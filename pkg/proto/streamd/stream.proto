syntax = "proto3";

package ai.metathings.service.streamd;

import "google/protobuf/wrappers.proto";

message ConfigValue {
	oneof value {
		double double = 1;
		string string = 2;
	}
}

enum StreamState {
	STREAM_STATE_UNKNOWN = 0;
	STREAM_STATE_RUNNING = 1;
	STREAM_STATE_STARTING = 2;
	STREAM_STATE_TERMINATING = 3;
	STREAM_STATE_STOP = 4;
}

message Stream {
	string id = 1;
	string name = 2;
	string owner_id = 3;
	StreamState state = 4;
	repeated Source sources = 5;
	repeated Group groups = 6;
}

message Upstream {
	string id = 1;
	string name = 2;
	string alias = 3;
	map<string, ConfigValue> config = 4;
}

message Input {
	string id = 1;
	string name = 2;
	string alias = 3;
	string symbol = 4;
	map<string, ConfigValue> config = 5;
}

message Output {
	string id = 1;
	string name = 2;
	string alias = 3;
	string symbol = 4;
	map<string, ConfigValue> config = 5;
}

message Source {
	string id = 1;
	Upstream upstream = 2;
}

message Group {
	string id = 1;
	repeated Input inputs = 2;
	repeated Output outputs = 3;
}

message OpUpstream {
	google.protobuf.StringValue id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue alias = 3;
	map<string, ConfigValue> config = 4;
}

message OpInput {
	google.protobuf.StringValue id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue alias = 3;
	map<string, ConfigValue> config = 4;
}

message OpOutput {
	google.protobuf.StringValue id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue alias = 3;
	map<string, ConfigValue> config = 4;
}

message OpSource {
	google.protobuf.StringValue id = 1;
	OpUpstream upstream = 2;
}

message OpGroup {
	google.protobuf.StringValue id = 1;
	repeated OpInput inputs = 2;
	repeated OpOutput outputs = 3;
}
