// Code generated by protoc-gen-go. DO NOT EDIT.
// source: patch.proto

package sensor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PatchRequest struct {
	Name                 *wrappers.StringValue   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Config               map[string]*SensorValue `protobuf:"bytes,2,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PatchRequest) Reset()         { *m = PatchRequest{} }
func (m *PatchRequest) String() string { return proto.CompactTextString(m) }
func (*PatchRequest) ProtoMessage()    {}
func (*PatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_patch_eaf2e6f535717852, []int{0}
}
func (m *PatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchRequest.Unmarshal(m, b)
}
func (m *PatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchRequest.Marshal(b, m, deterministic)
}
func (dst *PatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchRequest.Merge(dst, src)
}
func (m *PatchRequest) XXX_Size() int {
	return xxx_messageInfo_PatchRequest.Size(m)
}
func (m *PatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PatchRequest proto.InternalMessageInfo

func (m *PatchRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *PatchRequest) GetConfig() map[string]*SensorValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type PatchResponse struct {
	Sensor               *Sensor  `protobuf:"bytes,1,opt,name=sensor" json:"sensor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchResponse) Reset()         { *m = PatchResponse{} }
func (m *PatchResponse) String() string { return proto.CompactTextString(m) }
func (*PatchResponse) ProtoMessage()    {}
func (*PatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_patch_eaf2e6f535717852, []int{1}
}
func (m *PatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchResponse.Unmarshal(m, b)
}
func (m *PatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchResponse.Marshal(b, m, deterministic)
}
func (dst *PatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchResponse.Merge(dst, src)
}
func (m *PatchResponse) XXX_Size() int {
	return xxx_messageInfo_PatchResponse.Size(m)
}
func (m *PatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PatchResponse proto.InternalMessageInfo

func (m *PatchResponse) GetSensor() *Sensor {
	if m != nil {
		return m.Sensor
	}
	return nil
}

func init() {
	proto.RegisterType((*PatchRequest)(nil), "ai.metathings.service.sensor.PatchRequest")
	proto.RegisterMapType((map[string]*SensorValue)(nil), "ai.metathings.service.sensor.PatchRequest.ConfigEntry")
	proto.RegisterType((*PatchResponse)(nil), "ai.metathings.service.sensor.PatchResponse")
}

func init() { proto.RegisterFile("patch.proto", fileDescriptor_patch_eaf2e6f535717852) }

var fileDescriptor_patch_eaf2e6f535717852 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x69, 0xa7, 0x05, 0xd3, 0x09, 0x92, 0xd3, 0x18, 0x43, 0xc7, 0xf0, 0x30, 0x0f, 0x4b,
	0x61, 0xc2, 0x18, 0x22, 0x08, 0x8a, 0x47, 0x45, 0x32, 0xf0, 0x9e, 0x75, 0x6f, 0x69, 0x58, 0x9b,
	0xd4, 0x24, 0x6d, 0xd9, 0x5f, 0x2b, 0xf8, 0x87, 0x88, 0x34, 0xa9, 0xb2, 0xd3, 0xf0, 0x94, 0x97,
	0x1f, 0x9f, 0xef, 0xfb, 0xe4, 0xa1, 0xb8, 0x64, 0x36, 0xcd, 0x48, 0xa9, 0x95, 0x55, 0x78, 0xc4,
	0x04, 0x29, 0xc0, 0x32, 0x9b, 0x09, 0xc9, 0x0d, 0x31, 0xa0, 0x6b, 0x91, 0x02, 0x31, 0x20, 0x8d,
	0xd2, 0xc3, 0x4b, 0xae, 0x14, 0xcf, 0x21, 0x71, 0x6f, 0xd7, 0xd5, 0x36, 0x69, 0x34, 0x2b, 0x4b,
	0xd0, 0xc6, 0xd3, 0xc3, 0x05, 0x17, 0x36, 0xab, 0xd6, 0x24, 0x55, 0x45, 0x52, 0x34, 0xc2, 0xee,
	0x54, 0x93, 0x70, 0x35, 0x73, 0x97, 0xb3, 0x9a, 0xe5, 0x62, 0xc3, 0xac, 0xd2, 0x26, 0xf9, 0x2b,
	0x3b, 0xae, 0xef, 0xf3, 0xfd, 0x6e, 0xf2, 0x1d, 0xa0, 0xfe, 0x5b, 0xeb, 0x44, 0xe1, 0xa3, 0x02,
	0x63, 0xf1, 0x12, 0x9d, 0x48, 0x56, 0xc0, 0x20, 0x18, 0x07, 0xd3, 0x78, 0x3e, 0x22, 0xde, 0x82,
	0xfc, 0x5a, 0x90, 0x95, 0xd5, 0x42, 0xf2, 0x77, 0x96, 0x57, 0xf0, 0x18, 0x7d, 0x7d, 0x5e, 0x85,
	0xe3, 0x80, 0x3a, 0x02, 0xbf, 0xa2, 0x28, 0x55, 0x72, 0x2b, 0xf8, 0x20, 0x1c, 0xf7, 0xa6, 0xf1,
	0x7c, 0x41, 0x8e, 0xfd, 0x8f, 0x1c, 0x76, 0x25, 0x4f, 0x0e, 0x7c, 0x96, 0x56, 0xef, 0x69, 0x97,
	0x32, 0xdc, 0xa0, 0xf8, 0xe0, 0x18, 0x5f, 0xa0, 0xde, 0x0e, 0xf6, 0xce, 0xeb, 0x8c, 0xb6, 0x25,
	0x7e, 0x40, 0xa7, 0x75, 0xeb, 0x31, 0x08, 0x9d, 0xeb, 0xcd, 0xf1, 0x7e, 0x2b, 0xb7, 0x38, 0x71,
	0xea, 0xb9, 0xbb, 0x70, 0x19, 0x4c, 0x5e, 0xd0, 0x79, 0x67, 0x62, 0x4a, 0x25, 0x0d, 0xe0, 0x7b,
	0x14, 0x79, 0xa2, 0x1b, 0xc1, 0xf5, 0x7f, 0x62, 0x69, 0xc7, 0xac, 0x23, 0x37, 0xa8, 0xdb, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x1f, 0xfe, 0xa5, 0xe9, 0x01, 0x00, 0x00,
}
