// Code generated by protoc-gen-go. DO NOT EDIT.
// source: patch_timer.proto

package evaluatord

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PatchTimerRequest struct {
	Timer                *OpTimer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchTimerRequest) Reset()         { *m = PatchTimerRequest{} }
func (m *PatchTimerRequest) String() string { return proto.CompactTextString(m) }
func (*PatchTimerRequest) ProtoMessage()    {}
func (*PatchTimerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e61dd7230df4e0b, []int{0}
}

func (m *PatchTimerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchTimerRequest.Unmarshal(m, b)
}
func (m *PatchTimerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchTimerRequest.Marshal(b, m, deterministic)
}
func (m *PatchTimerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchTimerRequest.Merge(m, src)
}
func (m *PatchTimerRequest) XXX_Size() int {
	return xxx_messageInfo_PatchTimerRequest.Size(m)
}
func (m *PatchTimerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchTimerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PatchTimerRequest proto.InternalMessageInfo

func (m *PatchTimerRequest) GetTimer() *OpTimer {
	if m != nil {
		return m.Timer
	}
	return nil
}

type PatchTimerResponse struct {
	Timer                *Timer   `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchTimerResponse) Reset()         { *m = PatchTimerResponse{} }
func (m *PatchTimerResponse) String() string { return proto.CompactTextString(m) }
func (*PatchTimerResponse) ProtoMessage()    {}
func (*PatchTimerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e61dd7230df4e0b, []int{1}
}

func (m *PatchTimerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchTimerResponse.Unmarshal(m, b)
}
func (m *PatchTimerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchTimerResponse.Marshal(b, m, deterministic)
}
func (m *PatchTimerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchTimerResponse.Merge(m, src)
}
func (m *PatchTimerResponse) XXX_Size() int {
	return xxx_messageInfo_PatchTimerResponse.Size(m)
}
func (m *PatchTimerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchTimerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PatchTimerResponse proto.InternalMessageInfo

func (m *PatchTimerResponse) GetTimer() *Timer {
	if m != nil {
		return m.Timer
	}
	return nil
}

func init() {
	proto.RegisterType((*PatchTimerRequest)(nil), "ai.metathings.service.evaluatord.PatchTimerRequest")
	proto.RegisterType((*PatchTimerResponse)(nil), "ai.metathings.service.evaluatord.PatchTimerResponse")
}

func init() { proto.RegisterFile("patch_timer.proto", fileDescriptor_8e61dd7230df4e0b) }

var fileDescriptor_8e61dd7230df4e0b = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x48, 0x2c, 0x49,
	0xce, 0x88, 0x2f, 0xc9, 0xcc, 0x4d, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0x48,
	0xcc, 0xd4, 0xcb, 0x4d, 0x2d, 0x49, 0x2c, 0xc9, 0xc8, 0xcc, 0x4b, 0x2f, 0xd6, 0x2b, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4b, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x2c, 0xc9, 0x2f, 0x4a, 0x91,
	0x32, 0x4b, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x2d, 0xcf, 0x2c,
	0xc9, 0xce, 0x2f, 0xd7, 0x4f, 0xcf, 0xd7, 0x05, 0x6b, 0xd7, 0x2d, 0x4b, 0xcc, 0xc9, 0x4c, 0x01,
	0xa9, 0x2b, 0xd6, 0x87, 0x33, 0x21, 0x26, 0x4b, 0x71, 0xe7, 0xe6, 0xa7, 0xa4, 0xe6, 0x40, 0x38,
	0x4a, 0x31, 0x5c, 0x82, 0x01, 0x20, 0xbb, 0x43, 0x40, 0x56, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0xb9, 0x73, 0xb1, 0x82, 0x9d, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0xa4, 0xa9,
	0x47, 0xc8, 0x2d, 0x7a, 0xfe, 0x05, 0x60, 0x03, 0x9c, 0xd8, 0x1e, 0xdd, 0x97, 0x67, 0x52, 0x60,
	0x0c, 0x82, 0xe8, 0x57, 0x0a, 0xe6, 0x12, 0x42, 0x36, 0xbd, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55,
	0xc8, 0x16, 0xd5, 0x78, 0x75, 0xc2, 0xc6, 0x43, 0xf4, 0x43, 0x74, 0x39, 0xf1, 0x44, 0x71, 0x21,
	0xa4, 0x92, 0xd8, 0xc0, 0xfe, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x25, 0xde, 0x57, 0xa4,
	0x43, 0x01, 0x00, 0x00,
}
