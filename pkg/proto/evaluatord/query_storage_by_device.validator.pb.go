// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: query_storage_by_device.proto

package evaluatord

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/nayotta/metathings/pkg/proto/common/option/pagination"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/nayotta/metathings/pkg/proto/deviced"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *QueryStorageByDeviceRequest) Validate() error {
	if nil == this.Device {
		return github_com_mwitkow_go_proto_validators.FieldError("Device", fmt.Errorf("message must exist"))
	}
	if this.Device != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Device); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Device", err)
		}
	}
	if nil == this.Resource {
		return github_com_mwitkow_go_proto_validators.FieldError("Resource", fmt.Errorf("message must exist"))
	}
	if this.Resource != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Resource); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Resource", err)
		}
	}
	if nil == this.Measurement {
		return github_com_mwitkow_go_proto_validators.FieldError("Measurement", fmt.Errorf("message must exist"))
	}
	if this.Measurement != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Measurement); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Measurement", err)
		}
	}
	if this.RangeFrom != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RangeFrom); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RangeFrom", err)
		}
	}
	if this.RangeTo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RangeTo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RangeTo", err)
		}
	}
	if nil == this.QueryString {
		return github_com_mwitkow_go_proto_validators.FieldError("QueryString", fmt.Errorf("message must exist"))
	}
	if this.QueryString != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.QueryString); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("QueryString", err)
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *QueryStorageByDeviceResponse) Validate() error {
	for _, item := range this.Frames {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Frames", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
