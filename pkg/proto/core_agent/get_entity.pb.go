// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_entity.proto

package core_agent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetEntityRequest struct {
	Id *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetEntityRequest) Reset()                    { *m = GetEntityRequest{} }
func (m *GetEntityRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEntityRequest) ProtoMessage()               {}
func (*GetEntityRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *GetEntityRequest) GetId() *google_protobuf.StringValue {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetEntityResponse struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (m *GetEntityResponse) Reset()                    { *m = GetEntityResponse{} }
func (m *GetEntityResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEntityResponse) ProtoMessage()               {}
func (*GetEntityResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *GetEntityResponse) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func init() {
	proto.RegisterType((*GetEntityRequest)(nil), "ai.metathings.service.core_agent.GetEntityRequest")
	proto.RegisterType((*GetEntityResponse)(nil), "ai.metathings.service.core_agent.GetEntityResponse")
}

func init() { proto.RegisterFile("get_entity.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0xd5, 0x0e, 0x1d, 0x0c, 0x43, 0xc9, 0x84, 0x2a, 0x84, 0xaa, 0x4e, 0x1d, 0xe8, 0x59,
	0x02, 0x89, 0xb9, 0x0b, 0x62, 0x2f, 0x82, 0xb5, 0x72, 0x92, 0xe3, 0x7a, 0x22, 0xf1, 0x05, 0xfb,
	0xd2, 0x88, 0x7f, 0x8f, 0xe4, 0x18, 0x94, 0xad, 0x9b, 0xe5, 0xbb, 0xf7, 0xbd, 0xef, 0xcc, 0x92,
	0x50, 0x8f, 0xe8, 0x95, 0xf5, 0x07, 0xba, 0x20, 0x2a, 0xc5, 0xda, 0x31, 0xb4, 0xa8, 0x4e, 0x4f,
	0xec, 0x29, 0x42, 0xc4, 0x70, 0xe6, 0x0a, 0xa1, 0x92, 0x80, 0x47, 0x47, 0xe8, 0x75, 0x75, 0x4f,
	0x22, 0xd4, 0xa0, 0x4d, 0xfb, 0x65, 0xff, 0x69, 0x87, 0xe0, 0xba, 0x0e, 0x43, 0x1c, 0x09, 0xab,
	0x67, 0x62, 0x3d, 0xf5, 0x25, 0x54, 0xd2, 0xda, 0x76, 0x60, 0xfd, 0x92, 0xc1, 0x92, 0xec, 0xd2,
	0x70, 0x77, 0x76, 0x0d, 0xd7, 0x4e, 0x25, 0x44, 0xfb, 0xff, 0xcc, 0xb9, 0xeb, 0xa9, 0xc7, 0x66,
	0x6f, 0x96, 0xaf, 0xa8, 0x2f, 0xe9, 0xeb, 0x80, 0xdf, 0x3d, 0x46, 0x2d, 0x1e, 0xcc, 0x9c, 0xeb,
	0xdb, 0xd9, 0x7a, 0xb6, 0xbd, 0x7a, 0xbc, 0x83, 0x51, 0x03, 0xfe, 0x34, 0xe0, 0x4d, 0x03, 0x7b,
	0xfa, 0x70, 0x4d, 0x8f, 0x87, 0x39, 0xd7, 0x9b, 0x77, 0x73, 0x33, 0x21, 0xc4, 0x4e, 0x7c, 0xc4,
	0x62, 0x6f, 0x16, 0x63, 0x4d, 0xc6, 0x6c, 0xe1, 0xd2, 0xbd, 0x90, 0x09, 0x39, 0x57, 0x2e, 0x52,
	0xe1, 0xd3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x1a, 0x21, 0xb7, 0x3b, 0x01, 0x00, 0x00,
}
