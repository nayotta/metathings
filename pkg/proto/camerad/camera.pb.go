// Code generated by protoc-gen-go. DO NOT EDIT.
// source: camera.proto

package camerad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/mwitkow/go-proto-validators"
import camera "github.com/nayotta/metathings/pkg/proto/camera"
import _ "github.com/nayotta/metathings/pkg/proto/cored"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OpConfig struct {
	Device               *wrappers.StringValue `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	Width                *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=width" json:"width,omitempty"`
	Height               *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=height" json:"height,omitempty"`
	Bitrate              *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=bitrate" json:"bitrate,omitempty"`
	Framerate            *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=framerate" json:"framerate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *OpConfig) Reset()         { *m = OpConfig{} }
func (m *OpConfig) String() string { return proto.CompactTextString(m) }
func (*OpConfig) ProtoMessage()    {}
func (*OpConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_camera_172e91fccaf5809e, []int{0}
}
func (m *OpConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpConfig.Unmarshal(m, b)
}
func (m *OpConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpConfig.Marshal(b, m, deterministic)
}
func (dst *OpConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpConfig.Merge(dst, src)
}
func (m *OpConfig) XXX_Size() int {
	return xxx_messageInfo_OpConfig.Size(m)
}
func (m *OpConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OpConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OpConfig proto.InternalMessageInfo

func (m *OpConfig) GetDevice() *wrappers.StringValue {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *OpConfig) GetWidth() *wrappers.UInt32Value {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *OpConfig) GetHeight() *wrappers.UInt32Value {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *OpConfig) GetBitrate() *wrappers.UInt32Value {
	if m != nil {
		return m.Bitrate
	}
	return nil
}

func (m *OpConfig) GetFramerate() *wrappers.UInt32Value {
	if m != nil {
		return m.Framerate
	}
	return nil
}

type Camera struct {
	Id                      string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                    string               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ApplicationCredentialId string               `protobuf:"bytes,3,opt,name=application_credential_id,json=applicationCredentialId" json:"application_credential_id,omitempty"`
	CoreId                  string               `protobuf:"bytes,4,opt,name=core_id,json=coreId" json:"core_id,omitempty"`
	EntityName              string               `protobuf:"bytes,5,opt,name=entity_name,json=entityName" json:"entity_name,omitempty"`
	OwnerId                 string               `protobuf:"bytes,6,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	State                   camera.CameraState   `protobuf:"varint,7,opt,name=state,enum=ai.metathings.service.camera.CameraState" json:"state,omitempty"`
	Config                  *camera.CameraConfig `protobuf:"bytes,8,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *Camera) Reset()         { *m = Camera{} }
func (m *Camera) String() string { return proto.CompactTextString(m) }
func (*Camera) ProtoMessage()    {}
func (*Camera) Descriptor() ([]byte, []int) {
	return fileDescriptor_camera_172e91fccaf5809e, []int{1}
}
func (m *Camera) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Camera.Unmarshal(m, b)
}
func (m *Camera) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Camera.Marshal(b, m, deterministic)
}
func (dst *Camera) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Camera.Merge(dst, src)
}
func (m *Camera) XXX_Size() int {
	return xxx_messageInfo_Camera.Size(m)
}
func (m *Camera) XXX_DiscardUnknown() {
	xxx_messageInfo_Camera.DiscardUnknown(m)
}

var xxx_messageInfo_Camera proto.InternalMessageInfo

func (m *Camera) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Camera) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Camera) GetApplicationCredentialId() string {
	if m != nil {
		return m.ApplicationCredentialId
	}
	return ""
}

func (m *Camera) GetCoreId() string {
	if m != nil {
		return m.CoreId
	}
	return ""
}

func (m *Camera) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *Camera) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Camera) GetState() camera.CameraState {
	if m != nil {
		return m.State
	}
	return camera.CameraState_CAMERA_STATE_UNKNOWN
}

func (m *Camera) GetConfig() *camera.CameraConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*OpConfig)(nil), "ai.metathings.service.camerad.OpConfig")
	proto.RegisterType((*Camera)(nil), "ai.metathings.service.camerad.Camera")
}

func init() { proto.RegisterFile("camera.proto", fileDescriptor_camera_172e91fccaf5809e) }

var fileDescriptor_camera_172e91fccaf5809e = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xbf, 0x6e, 0xdb, 0x30,
	0x10, 0xc6, 0x61, 0xd5, 0x96, 0x6d, 0xa6, 0xc8, 0xc0, 0x25, 0x4a, 0xd0, 0x3f, 0x41, 0xa6, 0xb4,
	0x40, 0x48, 0xc0, 0x29, 0x82, 0xc2, 0x1d, 0x0a, 0xd4, 0x93, 0x97, 0x16, 0x50, 0xd0, 0xae, 0x06,
	0x2d, 0xd2, 0x14, 0x11, 0x89, 0x14, 0xa8, 0x73, 0x84, 0xbc, 0x4c, 0x1f, 0xa6, 0x4f, 0x56, 0xf0,
	0xa8, 0x24, 0x5e, 0x5a, 0x28, 0x8b, 0xc1, 0xf3, 0x7d, 0x3f, 0x9d, 0xbe, 0xef, 0x28, 0xf2, 0xba,
	0x10, 0xb5, 0xf2, 0x82, 0x35, 0xde, 0x81, 0xa3, 0x6f, 0x85, 0x61, 0xb5, 0x02, 0x01, 0xa5, 0xb1,
	0xba, 0x65, 0xad, 0xf2, 0xf7, 0xa6, 0x50, 0x2c, 0x6a, 0xe4, 0xd9, 0x3b, 0xed, 0x9c, 0xae, 0x14,
	0x47, 0xf1, 0x76, 0xbf, 0xe3, 0x9d, 0x17, 0x4d, 0xa3, 0x7c, 0x1b, 0xf1, 0xb3, 0x1b, 0x6d, 0xa0,
	0xdc, 0x6f, 0x59, 0xe1, 0x6a, 0x5e, 0x77, 0x06, 0xee, 0x5c, 0xc7, 0xb5, 0xbb, 0xc2, 0xe6, 0xd5,
	0xbd, 0xa8, 0x8c, 0x14, 0xe0, 0x7c, 0xcb, 0x9f, 0x8e, 0x3d, 0xf7, 0xf9, 0x80, 0xb3, 0xe2, 0xc1,
	0x01, 0x08, 0xfe, 0xfc, 0x1a, 0xbc, 0xb9, 0xd3, 0x71, 0x24, 0x2f, 0x9c, 0x57, 0x12, 0x7f, 0x7b,
	0x72, 0xf9, 0x32, 0x52, 0x59, 0x30, 0xf0, 0xd0, 0xb3, 0x5f, 0x06, 0xb3, 0x68, 0x9f, 0x1f, 0x26,
	0x75, 0xf1, 0x3b, 0x21, 0xb3, 0x1f, 0xcd, 0xca, 0xd9, 0x9d, 0xd1, 0xf4, 0x13, 0x49, 0xa5, 0x0a,
	0x49, 0x65, 0xa3, 0xf3, 0xd1, 0xe5, 0xd1, 0xe2, 0x0d, 0x8b, 0x41, 0xb1, 0xc7, 0xa0, 0xd8, 0x2d,
	0x78, 0x63, 0xf5, 0x2f, 0x51, 0xed, 0x55, 0xde, 0x6b, 0xe9, 0x82, 0x4c, 0x3a, 0x23, 0xa1, 0xcc,
	0x92, 0x7f, 0x40, 0x3f, 0xd7, 0x16, 0xae, 0x17, 0x11, 0x8a, 0xd2, 0x30, 0xa9, 0x54, 0x46, 0x97,
	0x90, 0xbd, 0x1a, 0x00, 0xf5, 0x5a, 0x7a, 0x43, 0xa6, 0x5b, 0x03, 0x5e, 0x80, 0xca, 0xc6, 0x03,
	0xb0, 0x47, 0x31, 0x5d, 0x92, 0xf9, 0xce, 0xa3, 0x6b, 0x50, 0xd9, 0x64, 0x00, 0xf9, 0x2c, 0xbf,
	0xf8, 0x93, 0x90, 0x74, 0x85, 0x05, 0x3d, 0x26, 0x89, 0x91, 0x18, 0xcd, 0x3c, 0x4f, 0x8c, 0xa4,
	0x94, 0x8c, 0xad, 0xa8, 0x15, 0xfa, 0x9e, 0xe7, 0x78, 0xa6, 0x4b, 0x72, 0x2a, 0x9a, 0xa6, 0x32,
	0x85, 0x00, 0xe3, 0xec, 0xa6, 0xf0, 0x4a, 0x86, 0x65, 0x89, 0x6a, 0x63, 0x24, 0x7a, 0x9d, 0xe7,
	0x27, 0x07, 0x82, 0xd5, 0x53, 0x7f, 0x2d, 0xe9, 0x09, 0x99, 0x86, 0xf5, 0x06, 0xe5, 0x18, 0x95,
	0x69, 0x28, 0xd7, 0x92, 0xbe, 0x27, 0x47, 0x71, 0xe3, 0x1b, 0x9c, 0x37, 0xc1, 0x26, 0x89, 0x7f,
	0x7d, 0x0f, 0x53, 0x4f, 0xc9, 0xcc, 0x75, 0x56, 0xf9, 0x80, 0xa6, 0xd8, 0x9d, 0x62, 0xbd, 0x96,
	0xf4, 0x2b, 0x99, 0xb4, 0x10, 0x7c, 0x4f, 0xcf, 0x47, 0x97, 0xc7, 0x8b, 0x0f, 0xec, 0x7f, 0x9f,
	0x06, 0x8b, 0x4e, 0x6f, 0x03, 0x90, 0x47, 0x8e, 0x7e, 0x23, 0x69, 0x81, 0xd7, 0x23, 0x9b, 0x61,
	0x72, 0x1f, 0x87, 0x3c, 0x21, 0x5e, 0xa8, 0xbc, 0x27, 0xb7, 0x29, 0xa6, 0x7c, 0xfd, 0x37, 0x00,
	0x00, 0xff, 0xff, 0x8a, 0xa1, 0xb4, 0x6c, 0xa6, 0x03, 0x00, 0x00,
}
